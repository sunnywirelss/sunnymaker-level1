// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.spa');

goog.require('Blockly.Msg');

Blockly.Msg.ADD_COMMENT = "Añadir Comentario";
Blockly.Msg.AUTH = "Por favor, autorice esta aplicación para que su trabajo se salven y para que pueda ser compartida por usted.";
Blockly.Msg.CHANGE_VALUE_TITLE = "Cambiar valor:";
Blockly.Msg.CHAT = "Chatea con su colaborador escribiendo en esta caja!";
Blockly.Msg.CLEAN_UP = "Limpiar los Bloques";
Blockly.Msg.COLLAPSE_ALL = "Contraer Bloques";
Blockly.Msg.COLLAPSE_BLOCK = "Contraer Bloque";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "color 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "color 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";
Blockly.Msg.COLOUR_BLEND_RATIO = "escala";
Blockly.Msg.COLOUR_BLEND_TITLE = "mezcla";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Combina dos colores junto con una relación dada (0,0 - 1,0).";
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://en.wikipedia.org/wiki/Color";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Elija un color de la paleta.";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";
Blockly.Msg.COLOUR_RANDOM_TITLE = "color aleatorio";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Elegir un color aleatorio.";
Blockly.Msg.COLOUR_RGB_BLUE = "azul";
Blockly.Msg.COLOUR_RGB_GREEN = "verde";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";
Blockly.Msg.COLOUR_RGB_RED = "rojo";
Blockly.Msg.COLOUR_RGB_TITLE = "color con";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Crea un color con la cantidad especificada de rojo, verde y azul. Todos los valores deben estar entre 0 y 100.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "salir del bucle";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "continuar con la próxima iteración del bucle";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Romper el bucle que contiene.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Saltar el resto de este bucle, y continuar con la siguiente iteración.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Advertencia: Este bloque sólo se puede utilizar dentro de un bucle.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each for each block";
Blockly.Msg.CONTROLS_FOREACH_INPUT_INLIST = "en la lista";
Blockly.Msg.CONTROLS_FOREACH_INPUT_INLIST_TAIL = "";
Blockly.Msg.CONTROLS_FOREACH_INPUT_ITEM = "por cada item";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "Para cada elemento de una lista, establezca la variable '% 1' para el elemento y, a continuación, hacer algunas instrucciones.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";
Blockly.Msg.CONTROLS_FOR_INPUT_FROM_TO = "from %1 to %2";
Blockly.Msg.CONTROLS_FOR_INPUT_FROM_TO_BY = "from %1 to %2 by %3";
Blockly.Msg.CONTROLS_FOR_INPUT_WITH = "count with";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Tomando la variable %1 los valores del número de inicio hasta el número final, contando con el intervalo especificado, ejecuta los bloques especificados.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Agregar una condición al bloque if.";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Añadir una condicón final al bloque if.";
Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Añadir, eliminar o cambiar el orden de las secciones para reconfigurar este bloque if.";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "de lo contrario";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "en cambio, si";
Blockly.Msg.CONTROLS_IF_MSG_IF = "si";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Si un valor es verdadero, entonces ejecuta unas instrucciones.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Si un valor es verdadero, hace el primer bloque de instrucciones De lo contrario, haga lo segundo bloque de instrucciones.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Si el primer valor es verdadero, hacer el primer bloque de sentencias. De lo contrario, si el segundo valor es verdaderoe, hacer el segundo bloque de instrucciones.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Si el primer valor es verdadero, hacer el primer bloque de sentencias. De lo contrario, si el segundo valor es cierto, hacer el segundo bloque de instrucciones. Si ninguno de los valores son verdaderos, hacer el último bloque de instrucciones.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://en.wikipedia.org/wiki/For_loop";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "ejecutar";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "repetir %1 veces";
Blockly.Msg.CONTROLS_REPEAT_TITLE_REPEAT = "repetir";
Blockly.Msg.CONTROLS_REPEAT_TITLE_TIMES = "veces";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Ejcutar algunas operaciones varias veces.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "repetir hasta";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "repetir mientras";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Mientras que un valor es falso, repetir algunas operaciones.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Mientras que un valor es cierto, repetir algunas operaciones.";
Blockly.Msg.DELETE_BLOCK = "Borrar Bloque";
Blockly.Msg.DELETE_X_BLOCKS = "Borrar %1 Bloques";
Blockly.Msg.DISABLE_BLOCK = "Desactivar Bloque";
Blockly.Msg.DUPLICATE_BLOCK = "Duplicar";
Blockly.Msg.ENABLE_BLOCK = "Activar Bloque";
Blockly.Msg.EXPAND_ALL = "Expandir Bloques";
Blockly.Msg.EXPAND_BLOCK = "Expandir Bloque";
Blockly.Msg.EXTERNAL_INPUTS = "Entradas Externas";
Blockly.Msg.HELP = "Ayuda";
Blockly.Msg.INLINE_INPUTS = "Entradas en Linea";
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "crear una lista vacía";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Devolver una lista, de longitud 0, no conteniendo datos";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "lista";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Añadir, quita, o rordenar secciones para cnfigurar la lista bloque.";
Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "crear una lista con";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Añadir un elemento a la lista.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Crear una lista con cualquier número de datos.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "primero";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# desde el final";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";
Blockly.Msg.LISTS_GET_INDEX_GET = "obtener";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "obtener y eliminar";
Blockly.Msg.LISTS_GET_INDEX_LAST = "último";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "aleatorio";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "eliminar";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Devuelve el primer elemento d ela lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "Devuelve el item cuya osicion se especifica en una lista en la que. #1 es el ultimo elemento.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "Devuelve el elemento en la posición especificada en la lista. #1 es el primer elemento.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Devuelve el último elemento de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Devuelve un elemento aleatorio en una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Elimina y devuelve el primer elemento de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "Elimina y devuelve el elemento en la posición especificada en la lista. #1 es el último elemento.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "Elimina y devuelve el elemento en la posición especificada en la lista. #1 es el primer elemento.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Elimina y devuelve el último elemento de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Elimina y devuelve un elemento aleatorio en una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Elimina el primer elemento de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "Elimina el elemento en la posición especificada en la lista. #1 es el último elemento.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "Elimina el elemento en la posición especificada en la lista. #1 es el primer elemento.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Elimina el último elemento de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Elimina un elemento aleatorio en una lista.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "hasta # del final";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "hasta #";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "hasta el último";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "obtener sublista desde el primero";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "obtener sublista desde # del final";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "obtener sublista desde #";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Crea una copia de la parte especificada de una lista.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "encontrar la primera aparición del elemento";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_LAST = "encontrar la última aparición del elemento";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Devuelve el índice de la primera/última aparición del elemento en la lista. Devuelve 0 si el texto no se encuentra.";
Blockly.Msg.LISTS_INLIST = "en la lista";
Blockly.Msg.LISTS_IS_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg.LISTS_IS_EMPTY_TITLE = "%1 está vacía";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg.LISTS_LENGTH_TITLE = "longitud de";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Devuelve la longitud de una lista.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_REPEAT_TITLE = "crear lista con el elemento %1 repetido %2 veces";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Crea una lista que consta de un valor dado repetido el número de veces especificado.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "como";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "insertar en";
Blockly.Msg.LISTS_SET_INDEX_SET = "establecer";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Inserta el elemento al inicio de una lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "Inserta el elemento en la posición especificada en la lista. #1 es el último elemento.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Inserta el elemento en la posición especificada en la lista. #1 es el primer elemento.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Añade el elemento al final de una lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Inserta el elemento aleatoriamente en una lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Establece el primer elemento de una lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "Establece el elemento en la posición especificada en una lista. #1 es el último elemento.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "Establece el elemento en la posición especificada en una lista. #1 es el primer elemento.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Establece el último elemento de una lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Establece un elemento aleatorio en una lista.";
Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";
Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "hacer lista a partir de texto";
Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "hacer texto a partir de lista";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Unir una lista de textos en un solo texto, separado por un delimitador.";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Dividir el texto en una lista de textos, separando en cada delimitador.";
Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "con delimitador";
Blockly.Msg.LISTS_TOOLTIP = "Devuelve verdadero si la lista está vacía.";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "falso";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Devuelve verdadero o falso.";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "verdadero";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://es.wikipedia.org/wiki/Desigualdad_matemática";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Devuelve verdadero si ambas entradas son iguales.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Devuelve verdadero si la primera entrada es mayor que la segunda entrada.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Devuelve verdadero si la primera entrada es mayor o igual a la segunda entrada.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Devuelve verdadero si la primera entrada es menor que la segunda entrada.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Devuelve verdadero si la primera entrada es menor que o igual a la segunda entrada.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Devuelve verdadero si ambas entradas son distintas.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg.LOGIC_NEGATE_TITLE = "no";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Devuelve verdadero si la entrada es falsa. Devuelve falso si la entrada es verdadera.";
Blockly.Msg.LOGIC_NULL = "nulo";
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Devuelve nulo.";
Blockly.Msg.LOGIC_OPERATION_AND = "y";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg.LOGIC_OPERATION_OR = "o";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Devuelve verdadero si ambas entradas son verdaderas.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Devuelve verdadero si al menos una de las entradas es verdadera.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "prueba";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";  // untranslated
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "si es falso";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "si es verdadero";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Comprueba la condición en \"prueba\". Si la condición es verdadera, devuelve el valor \"si es verdadero\"; de lo contrario, devuelve el valor \"si es falso\".";
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://es.wikipedia.org/wiki/Aritmética";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Devuelve la suma de ambos números.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Devuelve el cociente de ambos números.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Devuelve la diferencia de ambos números.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Devuelve el producto de ambos números.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Devuelve el primer número elevado a la potencia del segundo.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_QUYU = "";
Blockly.Msg.MATH_CHANGE_HELPURL = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
Blockly.Msg.MATH_CHANGE_INPUT_BY = "por";
Blockly.Msg.MATH_CHANGE_TITLE_CHANGE = "cambiar";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Añadir un número a la variable «%1».";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://es.wikipedia.org/wiki/Anexo:Constantes_matemáticas";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Devuelve una de las constantes comunes: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…) o ∞ (infinito).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";  // untranslated
Blockly.Msg.MATH_CONSTRAIN_TITLE = "limitar %1 entre %2 y %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Limitar un número entre los límites especificados (inclusive).";
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";  // untranslated
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "es divisible por";
Blockly.Msg.MATH_IS_EVEN = "es par";
Blockly.Msg.MATH_IS_NEGATIVE = "es negativo";
Blockly.Msg.MATH_IS_ODD = "es impar";
Blockly.Msg.MATH_IS_POSITIVE = "es positivo";
Blockly.Msg.MATH_IS_PRIME = "es primo";
Blockly.Msg.MATH_IS_TOOLTIP = "Comprueba si un número es par, impar, primo, entero, positivo, negativo, o si es divisible por un número determinado. Devuelve verdadero o falso.";
Blockly.Msg.MATH_IS_WHOLE = "es entero";
Blockly.Msg.MATH_MODULO_HELPURL = "https://en.wikipedia.org/wiki/Modulo_operation";
Blockly.Msg.MATH_MODULO_TITLE = "resto de %1 ÷ %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Devuelve el resto al dividir los dos números.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";  // untranslated
Blockly.Msg.MATH_NUMBER_HELPURL = "https://es.wikipedia.org/wiki/Número";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "Un número.";
Blockly.Msg.MATH_ONLIST_HELPURL = "";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "promedio de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "máximo de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "mediana de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "mínimo de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "modas de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "elemento aleatorio de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "desviación estándar de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "suma de la lista";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Devuelve el promedio (media aritmética) de los valores numéricos en la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Devuelve el número más grande en la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Devuelve la mediana en la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Devuelve el número más pequeño en la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Devuelve una lista de los elementos más comunes en la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Devuelve un elemento aleatorio de la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Devuelve la desviación estándar de la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Devuelve la suma de todos los números en la lista.";
Blockly.Msg.MATH_POWER_SYMBOL = "^";  // untranslated
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "aleatorio decimal";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Devuelve un decimal aleatorio entre 0.0 (incluida) y 1.0 (exclusivo).";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "entero aleatorio entre %1 y %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Devuelve un entero aleatorio entre los dos límites especificados, incluidos.";
Blockly.Msg.MATH_ROUND_HELPURL = "https://en.wikipedia.org/wiki/Rounding";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "redondeo";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "redondeo por lo alto";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "redondeo por lo bajo";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Redondear un número hacia arriba o hacia abajo.";
Blockly.Msg.MATH_SINGLE_HELPURL = "https://en.wikipedia.org/wiki/Square_root";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "absoluto";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "raíz cuadrada";
Blockly.Msg.MATH_ABS='abs';
Blockly.Msg.MATH_SQ='sq';
Blockly.Msg.MATH_SQRT='sqrt';
Blockly.Msg.MATH_LOG='log';
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Devuelve el valor absoluto de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Devuelve e a la potencia de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Devuelve el logaritmo natural de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Devuelve el logaritmo base 10 de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Devuelve la negación de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Devuelve 10 a la potencia de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Devuelve la raíz cuadrada de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_SQ = "Devuelve el cuadrado de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_TOINT = "Devuelve la parte entera de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROUND = "Devuelve la parte entera de un número utilizando around.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_CEIL = "Devuelve la parte entera de un número utilizando ceil.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_FLOOR = "Devuelve la parte entera de un número utilizando floor.";

Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";
Blockly.Msg.MATH_QUYU_SYMBOL="%";
Blockly.Msg.MATH_TRIG_ACOS = "acos";
Blockly.Msg.MATH_TRIG_ASIN = "asin";
Blockly.Msg.MATH_TRIG_ATAN = "atan";
Blockly.Msg.MATH_TRIG_COS = "cos";
Blockly.Msg.MATH_TRIG_HELPURL = "https://en.wikipedia.org/wiki/Trigonometric_functions";
Blockly.Msg.MATH_TRIG_SIN = "sin";
Blockly.Msg.MATH_TRIG_TAN = "tan";
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Devuelve el arcocoseno de un número.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Devuelve el arcoseno de un número.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Devuelve el arcotangente de un número.";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Devuelve el coseno de un grado (no radián).";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Devuelve el seno de un grado (no radián).";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Devuelve la tangente de un grado (no radián).";
Blockly.Msg.ME = "Yo";
Blockly.Msg.NEW_VARIABLE = "Nueva variable..";
Blockly.Msg.NEW_VARIABLE_TITLE = "Nombre de nueva variable:";
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "permitir declaraciones";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "con:";
Blockly.Msg.PROCEDURES_CALLNORETURN_CALL = "hacer";
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Run the user-defined function '%1'.";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Run the user-defined function '%1' and use its output.";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "con:";
Blockly.Msg.PROCEDURES_CREATE_DO = "Crear '%1'";
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "hacer";
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "proceso";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Crea una función sin salida.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "devuelve";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Crea una función con una salida.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Advertencia: Esta función tiene parámetros duplicados.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Destacar definición de la función";
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Si un valor es verdadero, entonces devuelve un segundo valor.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Advertencia: Este bloque solo puede ser utilizado dentro de la definición de una función.";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "nombre de entrada:";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Añadir una entrada a la función.";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "entradas";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Añadir, eliminar o reordenar entradas para esta función.";
Blockly.Msg.REMOVE_COMMENT = "Eliminar comentario";
Blockly.Msg.RENAME_VARIABLE = "Renombrar la variable…";
Blockly.Msg.RENAME_VARIABLE_TITLE = "Renombrar todas las variables «%1» a:";
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "añadir texto";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_APPEND_TO = "a";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Añadir texto a la variable '%1'.";
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "a minúsculas";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "a Mayúsculas Cada Palabra";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "a MAYÚSCULAS";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Devuelve una copia del texto en un caso diferente.";
Blockly.Msg.TEXT_CHARAT_FIRST = "obtener la primera letra";
Blockly.Msg.TEXT_CHARAT_FROM_END = "obtener la letra # del final";
Blockly.Msg.TEXT_CHARAT_FROM_START = "obtener la letra #";
Blockly.Msg.TEXT_CHARAT = "char at";  // untranslated
Blockly.Msg.TEXT_CHARAT2 = "";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "en el texto";
Blockly.Msg.TEXT_CHARAT_LAST = "obtener la última letra";
Blockly.Msg.TEXT_CHARAT_RANDOM = "obtener letra aleatoria";
Blockly.Msg.TEXT_CHARAT_TAIL = "";
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Devuelve la letra en la posición especificada.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Agregar un elemento al texto.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "unir";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Agregar, eliminar o reordenar las secciones para reconfigurar este bloque de texto.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "hasta la letra # del final";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "hasta la letra #";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "hasta la última letra";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "en el texto";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "obtener subcadena desde la primera letra";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "obtener subcadena desde la letra # del final";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "obtener subcadena desde la letra #";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Devuelve una porción determinada del texto.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "en el texto";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "encontrar la primera aparición del texto";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "encontrar la última aparición del texto";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";  // untranslated
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Devuelve el índice de la primera/última aparición del primer texto en el segundo texto. Devuelve 0 si el texto no se encuentra.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 está vacío";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Devuelve verdadero si el texto proporcionado está vacío.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "crear texto con";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Crear un fragmento de texto al unir cualquier número de elementos.";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_LENGTH_TITLE = "longitud de %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Devuelve el número de letras (incluyendo espacios) en el texto proporcionado.";
Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg.TEXT_PRINT_TITLE = "imprimir %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Escriba el texto, número u otro valor especificado.";
Blockly.Msg.TEXT_PRINT_HEX_TOOLTIP = "Imprimir el texto, número u otro valor especificado.";
Blockly.Msg.TEXT_WRITE_TOOLTIP = "Imprimir el número especificado en formato hexadecimal.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Solicitar al usuario un número.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Solicitar al usuario un texto.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "solicitar número con el mensaje";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "solicitar texto con el mensaje";
Blockly.Msg.TEXT_TEXT_HELPURL = "https://es.wikipedia.org/wiki/Cadena_de_caracteres";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "Una letra, palabra o línea de texto.";
Blockly.Msg.TEXT_CHAR_TOOLTIP = "A character.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "quitar espacios de ambos lados de";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "quitar espacios iniciales de";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "quitar espacios finales de";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Devuelve una copia del texto sin los espacios de uno o ambos extremos.";
Blockly.Msg.TODAY = "Today";  // untranslated
Blockly.Msg.VARIABLES_DEFAULT_NAME = "elemento";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Crear 'establecer %1'";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg.VARIABLES_GET_TAIL = "";  // untranslated
Blockly.Msg.VARIABLES_GET_TITLE = "";  // untranslated
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Devuelve el valor de esta variable.";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Crear 'obtener %1'";
Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg.VARIABLES_SET_TAIL = "a";
Blockly.Msg.VARIABLES_SET_TITLE = "establecer";
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Establece esta variable para que sea igual a la entrada.";
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.VARIABLES_SET_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.VARIABLES_GET_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_CALLRETURN_CALL = Blockly.Msg.PROCEDURES_CALLNORETURN_CALL;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
//luokailiang
Blockly.MIXLY_PINMODE = 'pinMode'; //untranslated
Blockly.MIXLY_PINMODEIN = 'INPUT'; //untranslated
Blockly.MIXLY_PINMODEOUT = 'OUTPUT'; //untranslated
Blockly.MIXLY_PINMODEPULLUP = 'INPUT_PULLUP'; //untranslated
Blockly.MIXLY_DECLARE='Declarar';
Blockly.MIXLY_AS='como';
Blockly.MIXLY_VALUE='valor';
Blockly.MIXLY_VALUE2='valor';
Blockly.MIXLY_MAP='Map ';
Blockly.MIXLY_MAP_FROM="desde [";
Blockly.MIXLY_MAP_TO="] hasta [";
Blockly.MIXLY_MILLIS='milisg';
Blockly.MIXLY_DELAY='Retardo';
Blockly.MIXLY_ATTACHINTERRUPT_PIN='conectarInterrupción pin#';
Blockly.MIXLY_DETACHINTERRUPT_PIN = 'desconctarInterrupción pin#';
Blockly.MIXLY_ATTACHPININTERRUPT_PIN = 'conectarPinInterrupción pin#';
Blockly.MIXLY_DETACHPININTERRUPT_PIN = 'desconctarPinInterrupción pin#';
Blockly.MIXLY_MODE='modo';
Blockly.MIXLY_DO='do';
Blockly.MIXLY_BUILDIN_LED='LED conectado ';
Blockly.MIXLY_STAT='Stat';
Blockly.MIXLY_DIGITALWRITE_PIN='EscribeDigital PIN#';
Blockly.MIXLY_DIGITALREAD_PIN='LeeDigital PIN#';
Blockly.MIXLY_ANALOGWRITE_PIN='EscribeAnalógico PIN#';
Blockly.MIXLY_ANALOGREAD_PIN='LeeAnalógico PIN#';
Blockly.MIXLY_SERIAL_WRITE = 'escribir';
Blockly.MIXLY_SERIAL_PRINT = 'imprime';
Blockly.MIXLY_SERIAL_PRINTLN='imprimeLinea';
Blockly.MIXLY_SERIAL_PRINT_HEX='imprimeLinea(hex)';
Blockly.MIXLY_SERIAL_FLUSH='flush';
Blockly.MIXLY_STEP='paso';
Blockly.MIXLY_TONE_PIN='Tono PIN#';
Blockly.MIXLY_FREQUENCY='frecuencia';
Blockly.MIXLY_DURATION='duración';
Blockly.MIXLY_NOTONE_PIN='apagaTono PIN#';
Blockly.MIXLY_BLOCKGROUP_CATEGORY='BlockGroup';
Blockly.MIXLY_IR_RECEIVE='IR_recibe PIN#';
Blockly.MIXLY_IR_RECEIVE_ENABLE='enableIRIn PIN#';
Blockly.MIXLY_IR_SEND_NEC1='IR_envia'
Blockly.MIXLY_IR_SEND_NEC2=' PIN#'
Blockly.MIXLY_IR_RECEIVE_RAW='IR_recibe(Imprime RAW Dato) PIN#';
Blockly.MIXLY_IR_SEND_RAW='IR_envia(RAW) PIN#'
Blockly.LANG_MATH_TO_INT = 'aInt';
Blockly.LANG_MATH_TO_ROUND = 'Round';
Blockly.LANG_MATH_TO_CEIL = 'Ceil';
Blockly.LANG_MATH_TO_FLOOR = 'Floor';
Blockly.MIXLY_SERVO='Servo';
Blockly.MIXLY_PIN='PIN#';
Blockly.MIXLY_DEGREE_0_180='Grados (0~180)';
Blockly.MIXLY_READ_DEGREES='Leer Grados';
Blockly.MIXLY_HIGH='ALTO';
Blockly.MIXLY_LOW='BAJO';
Blockly.MIXLY_ON='ON';
Blockly.MIXLY_OFF='OFF';
Blockly.MIXLY_RISING='SUBIR';
Blockly.MIXLY_FALLING='BAJAR';
Blockly.MIXLY_CHANGE='CAMBIO';
Blockly.MIXLY_I2C_MASTER_WRITE="I2C_Escribe Elemento";
Blockly.MIXLY_I2C_MASTER_READ="I2C_Lee Elemento";
Blockly.MIXLY_I2C_MASTER_READ2="I2C_Leer";
Blockly.MIXLY_I2C_VALUE="valor"
Blockly.MIXLY_I2C_BYTES="bytes";
Blockly.MIXLY_I2C_AVAILABLE='I2C isAvailable?';
Blockly.MIXLY_I2C_SLAVE_ONRECEIVE='I2C Slave onReceive PIN#';
Blockly.LANG_CONTROLS_FOR_INPUT_WITH = 'contar con';
Blockly.LANG_CONTROLS_FOR_INPUT_VAR = 'x';
Blockly.LANG_CONTROLS_FOR_INPUT_FROM = 'desde';
Blockly.LANG_CONTROLS_FOR_INPUT_TO = 'hasta';
Blockly.LANG_CONTROLS_FOR_INPUT_DO = 'ejecutar';
Blockly.LANG_CONTROLS_WHILEUNTIL_TITLE_REPEAT = 'repetir';
Blockly.LANG_CONTROLS_WHILEUNTIL_INPUT_DO = 'ejecutar';
Blockly.LANG_CONTROLS_WHILEUNTIL_OPERATOR_WHILE = 'mientras';
Blockly.LANG_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = 'hasta que';
Blockly.LANG_CONTROLS_FLOW_STATEMENTS_INPUT_OFLOOP = 'de bucle';
Blockly.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = 'salir';
Blockly.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = 'continuar próxima iteracción';
Blockly.LANG_CONTROLS_FLOW_STATEMENTS_WARNING = 'Cuidado:\n' + 'Este bloque solo puede\n' + 'usado como un bucle.';
Blockly.LANG_CONTROLS_FLOW_STATEMENTS_WARNING  = 'Advertencia: \ n' +
    'Este bloque solo puede \ n' +
    'ser utilizado dentro de un bucle';
Blockly.LANG_MATH_LONG = 'long';
Blockly.LANG_MATH_INT = 'int';
Blockly.LANG_MATH_FLOAT = 'float';
Blockly.LANG_MATH_BOOLEAN = 'boolean';
Blockly.LANG_MATH_BYTE = 'byte';
Blockly.LANG_MATH_CHAR = 'char';
Blockly.LANG_MATH_STRING = 'string';
Blockly.LANG_LISTS_GET_INDEX1 = 'get item at'; //untranslated
Blockly.LANG_LISTS_GET_INDEX2 = '';
Blockly.LANG_LISTS_GET_INDEX_TOOLTIP = 'Devuelve el valor en la posición especificada en una lista.';
Blockly.LANG_LISTS_SET_INDEX1 = 'set item at'; //untranslated
Blockly.LANG_LISTS_SET_INDEX2 = 'to'; //untranslated
Blockly.LANG_LISTS_SET_INDEX_TOOLTIP = 'Establece el valor en la posición especificada en una lista.';
Blockly.LANG_MATH_CONSTRAIN_INPUT_CONSTRAIN = 'Limitar';
Blockly.LANG_MATH_CONSTRAIN_INPUT_LOW = 'entre (bajo)';
Blockly.LANG_MATH_CONSTRAIN_INPUT_HIGH = 'y (alto)';
Blockly.LANG_MATH_RANDOM_SEED = 'semilla aleatoria';
Blockly.LANG_MATH_RANDOM_INT_INPUT_FROM = 'entero aleatorio de';
Blockly.LANG_MATH_RANDOM_INT_INPUT_TO = 'a';
Blockly.MIXLY_DF_LED='LED';
Blockly.MIXLY_DF_BUZZER='Zumbador';
Blockly.MIXLY_DF_BTN='Botón';
Blockly.MIXLY_DF_VIBRATION='Vibración';
Blockly.MIXLY_DF_TILT='Tilt';
Blockly.MIXLY_DF_TOUCH='Pulsador';
Blockly.MIXLY_DF_MAGNETIC='Magnético';
Blockly.MIXLY_DF_PYROELECTRIC_INFRARED='Piroeléctrico infrarrojo';
Blockly.MIXLY_MB_PYROELECTRIC_INFRARED='Sensor Mov. PIR';
Blockly.MIXLY_DF_JOYSTICK_D='Boton Joystick';
Blockly.MIXLY_DF_JOYSTICK_A='Joystick';
Blockly.MIXLY_JOYSTICK='Joystick';
Blockly.MIXLY_DF_POTENTIOMETER='Potenciómetro';
Blockly.MIXLY_POTENTIOMETER='Potenciómetro';
Blockly.MIXLY_DF_ROTATION='Rotación';
Blockly.MIXLY_DF_VOLTAGE='Voltage';
Blockly.MIXLY_DF_PIEZO_DISK_VIRBRATION='Disco vibracion piezoelectrico';
Blockly.MIXLY_DF_SOUND='Sonido';
Blockly.MIXLY_SOUND='Sonido';
Blockly.MIXLY_DF_RELAY='Relé';
Blockly.MIXLY_DF_LIGHT='Luz';
Blockly.MIXLY_DF_GRAYSCALE='EscalaGrises';
Blockly.MIXLY_DF_FLAME='Llama';
Blockly.MIXLY_DF_TEMPERATURE='Temperatura';
Blockly.MIXLY_TEMPERATURE='Temperatura(℃)';
Blockly.MIXLY_DF_ACCELEROMETER='Acelerómetro';
Blockly.MIXLY_DF_MOISTURE='Humedad';
Blockly.MIXLY_DF_WATER='Agua';
Blockly.MIXLY_DF_CO='Monóxido Carbono';
Blockly.MIXLY_DF_SHARP_GP2Y0A21='Sharp GP2Y0A21';
Blockly.MIXLY_MAKELISTFROM='hacer una lista del texto';
Blockly.MIXLY_SPLITBYDOU='';
Blockly.MIXLY_SETUP='configurar';
Blockly.MIXLY_WARNING_INTERRUPT='Este pin no puede ser interrumpido!';
Blockly.MIXLY_CHAOSHENGBO='Escala Ultrasonido(cm) ';
Blockly.MIXLY_MB_CHAOSHENGBO='Ultrasonido oscila';
Blockly.MIXLY_IR_RECEIVE_YES='Recibe';
Blockly.MIXLY_IR_RECEIVE_NO='NoRecibe';
Blockly.LANG_VARIABLES_SET_TITLE='';
Blockly.MIXLY_TEXT_JOIN='unir';
Blockly.MIXLY_SERIAL_AVAILABLE = 'disponible?';
Blockly.MIXLY_SERIAL_EVENT = 'serialEvent';
Blockly.MIXLY_SERIAL_READSTR='readString';
Blockly.MIXLY_SERIAL_READSTR_UNTIL='readStringUntil';
Blockly.MIXLY_SERIAL_READ='';
Blockly.MIXLY_IR_RECIEVE_TOOLTIP='Hacer algo al recibir señales infrarrojas.';
Blockly.MIXLY_IR_SEND_NEC_TOOLTIP='Envía señales de infrarrojos del tipo especificado';
Blockly.MIXLY_IR_RECIEVE_RAW_TOOLTIP='Imprimir la señal de infrarrojos de tipo RAW cuando lo recibe.';
Blockly.MIXLY_IR_SEND_RAW_TOOLTIP='Envía señales RAW infrarrojos (conjunto de número de pin, lista, la duración de la lista y la frecuencia IR)';
Blockly.MIXLY_LIST_NAME='lista';
Blockly.MIXLY_LIST_LENGTH='LongitudLista';
Blockly.MIXLY_TO_INT='aEntero';
Blockly.MIXLY_TO_FLOAT='aDecimal';
Blockly.MIXLY_DATA="dato";
Blockly.MIXLY_BITS="bits";
Blockly.MIXLY_MB_LIGHT_GRAYSCALE='Sensor luz Escala Grises';
Blockly.MIXLY_MB_LIGHT_GRAYSCALE_LED=' configura LED';
Blockly.MIXLY_MB_LIGHT_MOTOR='Configura Motor';
Blockly.MIXLY_MB_LIGHT_MOTOR_SPEED=' Velocidad(-255~255)';
Blockly.MIXLY_DELAY_MS='ms';
Blockly.MIXLY_DELAY_US = 'μs';
Blockly.MIXLY_PIN = 'PIN#';
Blockly.MIXLY_GETTEMPERATUE = 'leeTemperatura';
Blockly.MIXLY_GETHUMIDITY = 'leeHumedad';
Blockly.MIXLY_DHT11='DHT11 PIN#';
Blockly.MIXLY_DHT11_T='leeTemperatura';
Blockly.MIXLY_DHT11_H='leeHumedad';
Blockly.MIXLY_LCD_RGB_BACKLIGHT='LCD RGB Backlight';
Blockly.MIXLY_DF_LCD='LCD';
Blockly.MIXLY_LCD_PRINT1='imprimir linea1';
Blockly.MIXLY_LCD_PRINT2='imprimir linea2';
Blockly.MIXLY_LCD_PRINT3='imprimir linea3';
Blockly.MIXLY_LCD_PRINT4='imprimir linea4';
Blockly.MIXLY_LCD_ROW='fila';
Blockly.MIXLY_LCD_COLUMN='columna';
Blockly.MIXLY_LCD_PRINT='imprime';
Blockly.MIXLY_LCD_SETCOLOR='configuraColor';
Blockly.MIXLY_LCD_STAT_ON='On';
Blockly.MIXLY_LCD_STAT_OFF='Off';
Blockly.MIXLY_LCD_STAT_CURSOR='Cursor';
Blockly.MIXLY_LCD_STAT_NOCURSOR='noCursor';
Blockly.MIXLY_LCD_STAT_BLINK='Blink';
Blockly.MIXLY_LCD_STAT_NOBLINK='noBlink';
Blockly.MIXLY_LCD_STAT_CLEAR = 'Borrar';
Blockly.MIXLY_LCD_NOBACKLIGHT = 'NoBackLight';
Blockly.MIXLY_LCD_BACKLIGHT = 'BackLight';
Blockly.MIXLY_7S_DISPLAY='Display 7 segmentos';
Blockly.MIXLY_NUMBER='número';
Blockly.MIXLY_BLUETOOTH='Bluetooth';
Blockly.MIXLY_BLUETOOTH_READ_STR='leerString';
Blockly.MIXLY_AVAILABLE='disponible?';
Blockly.MIXLY_DATAPIN='datoPin#';
Blockly.MIXLY_CLOCKPIN='clockPin#';
Blockly.MIXLY_BITORDER='bitOrder';
Blockly.MIXLY_MSBFIRST='MSBFIRST';
Blockly.MIXLY_LSBFIRST='LSBFIRST';
Blockly.MIXLY_TOSTRING = 'aString';
Blockly.MIXLY_TOCHAR = 'aChar';
Blockly.MIXLY_TOASCII = 'aAscii';
Blockly.MIXLY_ROMEO_MOTOR='Romeo motor';
Blockly.MIXLY_ROMEO_MOTOR_SPEED='velocidad';
Blockly.MIXLY_STOP='stop';
Blockly.MIXLY_PULSEIN='pulsoIn(μs) PIN#';
Blockly.MIXLY_PULSEIN_STAT='estado';
Blockly.MIXLY_PULSEIN_TIMEOUT='tiempo_final(μs)';
Blockly.MIXLY_SERIAL_READ_INT='detectaInt';
Blockly.MIXLY_SERIAL_READ_FLOAT='detectaFloat';
Blockly.MIXLY_MAX='max';
Blockly.MIXLY_MIN='min';
Blockly.MIXLY_WRITE_SD_FILE='Escribe fichero en SD';
Blockly.MIXLY_SD_DATA='Dato';
Blockly.MIXLY_SD_NEWLINE='NuevaLinea';
Blockly.MIXLY_EEPROM_WRITE_LONG='Escribir(long) EEPROM dirección';
Blockly.MIXLY_EEPROM_READ_LONG='Leer(long) EEPROM dirección';
Blockly.MIXLY_EEPROM_WRITE_BYTE='Escribir(byte) EEPROM dirección';
Blockly.MIXLY_EEPROM_READ_BYTE='Leer(byte) EEPROM dirección';
Blockly.MIXLY_SENSE_MOTOR='Configurar Velocidad Motor(-255~255)';
Blockly.MIXLY_SENSE_MOTOR_STOP='Stop Motor';
Blockly.MIXLY_SENSE_SERVO='Configurar Ángulo Servo';
Blockly.MIXLY_SENSE_RGBLED='Configurar LED RGB\'s Color ';
Blockly.MIXLY_TRAFFIC_LED='Configurar LED tráfico';
Blockly.MIXLY_EAST='ESTE';
Blockly.MIXLY_SOUTH='SUR';
Blockly.MIXLY_WEST='OESTE';
Blockly.MIXLY_NORTH='NORTE';
Blockly.MIXLY_SENSE_BUZZER='Configurar Zumbador';
Blockly.MIXLY_SENSE_ULTRASONIC='Valor Ultrasonido';
Blockly.MIXLY_SENSE_PYROELECTRIC_INFRARED='PIR Movimiento?';
Blockly.MIXLY_BUTTON='Botón';
Blockly.MIXLY_UP='ARRIBA';
Blockly.MIXLY_DOWN='ABAJO';
Blockly.MIXLY_LEFT='IZQUIERDA';
Blockly.MIXLY_RIGHT='DERECHA';
Blockly.MIXLY_MID='MEDIO';
Blockly.MIXLY_IS_PRESSED='está presionado?';
Blockly.MIXLY_SENSE_SLIDING='Valor Potenciómetro deslizante';
Blockly.MIXLY_SENSE_TEMPERATURE='Valor Temperatura';
Blockly.MIXLY_SENSE_HUMIDITY='Valor Humedad';
Blockly.MIXLY_SENSE_SOUND='Valor Sonido';
Blockly.MIXLY_SENSE_LIGHT='Valor Luz';
Blockly.MIXLY_SENSE_WEIGHT='Valor de peso';
Blockly.MIXLY_SENSE_IR='IR Recibido:';
Blockly.MIXLY_SENSE_DIGITAL_DISPLAY='Configura LED Display Digital(0~99)';
Blockly.MIXLY_SENSE_DIGITAL_DISPLAY_CLOSE='Cierra LED Display Digital';
Blockly.MIXLY_SENSE_LED_MATRIX='Configura Matriz LED(0~9)';
Blockly.MIXLY_SENSE_LED_MATRIX_CLOSE='Cierra matriz LED';
Blockly.LANG_INOUT_DIGITAL_WRITE_TOOLTIP='Escribe un valor digital en el pin especificado';
Blockly.MIXLY_FORWARD='ir adelante';
Blockly.MIXLY_BACKWARD='ir atrás';
Blockly.MIXLY_TURNLEFT='giro izquierda';
Blockly.MIXLY_TURNRIGHT='giro derecha';
Blockly.MIXLY_MBOT_SPEED='a la velocidad(-255~255)';
Blockly.MIXLY_RUNTIME='Tiempo sistema ejecución';
Blockly.MIXLY_LED_ON_BOARD='led en placa';
Blockly.MIXLY_ALL='todo';
Blockly.MIXLY_SET_LED='Set LED';
Blockly.MIXLY_MBOT_TONE='Emite Tono';
Blockly.MIXLY_MBOT_NOTONE='Apaga Tono';
Blockly.MIXLY_SHOW_FACE='Muestra cara';
Blockly.MIXLY_SHOW_FACE_TEXT='caracteres:';
Blockly.MIXLY_SHOW_FACE_TIME='tiempo';
Blockly.MIXLY_MBOT_SET_DISPLAY='Configura Display 7 Segmentos';
Blockly.MIXLY_MBOT_SET_LIGHT='Configura Sensor de Luz';
Blockly.MIXLY_MBOT_SET_LIGHT_LED='led como';
Blockly.MIXLY_MBOT_SET_CAMERA='Establecer obturador de la cámara';
Blockly.MIXLY_MBOT_SET_CAMERA_STAT='como';
Blockly.MIXLY_MBOT_SET_CAMERA_PRESS='Presione';
Blockly.MIXLY_MBOT_SET_CAMERA_RELEASE='Activación';
Blockly.MIXLY_MBOT_SET_CAMERA_FOCUS_ON='Enfoque On';
Blockly.MIXLY_MBOT_SET_CAMERA_FOCUS_OFF='Enfoque Off';
Blockly.MIXLY_MBOT_LIGHT_SENSOR='Sensor Luz';
Blockly.MIXLY_LIGHT_SENSOR_ON_BOARD='sensor luz en tarjeta';
Blockly.MIXLY_MBOT_BUTTON='Botón';
Blockly.MIXLY_MBOT_BUTTON_PRESSED='presionado';
Blockly.MIXLY_MBOT_BUTTON_RELEASED='no presionado';
Blockly.MIXLY_MBOT_LINE_FOLLOWER='Seguidor Linea';
Blockly.MIXLY_MBOT_JOYSTICK='Joystick';
Blockly.MIXLY_MBOT_JOYSTICK_X='Eje-X';
Blockly.MIXLY_MBOT_JOYSTICK_Y='Eje-Y';
Blockly.MIXLY_MBOT_POTENTIOMETER='Potenciómetro';
Blockly.MIXLY_MBOT_SOUND_SENSOR='Sensor Sonido';
Blockly.MIXLY_MBOT_LIMIT_SWITCH='Interruptor Final de carrera';
Blockly.MIXLY_MBOT_TEMPERATURE='Temperatura';
Blockly.MIXLY_MBOT_PIR_MOTION_SENSOR='Sensor Movimiento PIR';
Blockly.MIXLY_MBOT_IR_REMOTE='IR remoto';
Blockly.MIXLY_MBOT_IR_REMOTE_PRESSED='presionado';
Blockly.MIXLY_SETTING='configurando';
Blockly.MIXLY_SEND_MBOT_MESSAGE='Enviando mensaje a mBot\'s ';
Blockly.MIXLY_MBOT_MESSAGE_RECEIVED='Mensaje recibido de mBot\'s';
Blockly.MIXLY_LABPLUS_ROBOT_MOVEMENT='Movimiento Robot';
Blockly.MIXLY_LABPLUS_ROBOT_MOVEMENT_GO_FORWARD='avanzar';
Blockly.MIXLY_LABPLUS_ROBOT_MOVEMENT_STOP='parar';
Blockly.MIXLY_LABPLUS_ROBOT_MOVEMENT_GO_BACK='retroceder';
Blockly.MIXLY_LABPLUS_ROBOT='Robot';
Blockly.MIXLY_LABPLUS_ROBOT_TURN_LEFT='girar izquierda';
Blockly.MIXLY_LABPLUS_ROBOT_TURN_RIGHT='girar derecha';
Blockly.MIXLY_LABPLUS_ROBOT_DISPLAY='Establece matriz leds en';
Blockly.MIXLY_LABPLUS_ROBOT_DISPLAY_SMILE='sonreir';
Blockly.MIXLY_LABPLUS_ROBOT_DISPLAY_NOSMILE='triste';
Blockly.MIXLY_LABPLUS_ROBOT_DISPLAY_CLOSE_EYE='cerrar los ojos';
Blockly.MIXLY_LABPLUS_ROBOT_DISPLAY_LEFT='flecha izquierda';
Blockly.MIXLY_LABPLUS_ROBOT_DISPLAY_RIGHT='flecha derecha';
Blockly.MIXLY_LABPLUS_ROBOT_DISPLAY_TIAOWEN='raya';
Blockly.MIXLY_LABPLUS_ROBOT_DISPLAY_ZEBRA='zebra';
Blockly.MIXLY_LABPLUS_ROBOT_DISPLAY_NOTHING='nada';
Blockly.MIXLY_LABPLUS_ROBOT_LED_TOP='Configura Led en la parte superior';
Blockly.MIXLY_LABPLUS_ROBOT_LED_SIDE='Establece color en los leds\' laterales';
Blockly.MIXLY_LCD_ADDRESS="dirección";
var MSG = {
  catInOut: "Entrada/Salida",
  catControl: "Control",
  catMath: "Matemáticas",
  catText: "Texto",
  catLists: "Listas",
  catMicropyLists: "Listas",
  catDicts: "Dictory",
  catLogic: "Lógica",
  catSerialPort:"SerialPort",
  catGroup: "Communicate",
  catStorage:"Storage",
  catSensor: "Sensor",
  catActuator: "Actuador",
  catMonitor:"Monitor",
  catVar: "Variables",
  catFun: "Funciones",
  catEthernet:"Ethernet",
  catEthernet_init:"Init",
  catEthernet_clinet:"Client",
  catSense: "Labplus(Box)",
  catSense2: "Labplus(Robot)",
  catLuxe:"LuxeRobot",
  tab_blocks: "Bloques",
  tab_arduino: "Código",
  copyright:"Copyright © Mixly Team@BNU				HTTP://MIXLY.ORG",
  viewNormal:"Normal",
  viewAdvanced:"Advanced",
  catGame:"Game",
  catSystem:"System",
  catTurtle: "Tortuga",
  catTuple: "Tuple",
  catIot:"IOT",
  catSet: "Set"
};
Blockly.MIXLY_TOOLTIP_INOUT_HIGHLOW='Devuelve alta o baja tensión.';
Blockly.MIXLY_TOOLTIP_INOUT_DIGITAL_READ='Devuelve un valor digital de un Pin específico';
Blockly.MIXLY_TOOLTIP_INOUT_ANALOG_WRITE='Escribe un valor analógico entre 0 y 255 en un Pin específico';
Blockly.MIXLY_TOOLTIP_INOUT_ANALOG_READ='Devuelve un valor entre 0 y 1023 de un Pin específico';
Blockly.MIXLY_TOOLTIP_INOUT_ATTACHINTERRUPT='Asocia la interrupción a un Pin específico';
Blockly.MIXLY_TOOLTIP_INOUT_DETACHINTERRUPT='Quita la interrupción de un Pin específico';
Blockly.MIXLY_TOOLTIP_CONTROL_SETUP='Inizialización(ejecutar una sola vez)';
Blockly.MIXLY_TOOLTIP_CONTROL_DELAY='Retarda un tiempo específico';
Blockly.MIXLY_TOOLTIP_CONTROL_MILLIS='Devuelve el sistema de tiempo de ejecución';
Blockly.MIXLY_TOOLTIP_VARIABLES_DECLARE='Declara e inicializa una variable';
Blockly.MIXLY_TOOLTIP_MATH_MAX='Devuelve el número mayor';
Blockly.MIXLY_TOOLTIP_MATH_MIN='Devuelve el número más pequeño';
Blockly.MIXLY_TOOLTIP_MATH_MAP='Asigna un número de un primer intérvalo a un numero de un segundo intérvalo.';
Blockly.MIXLY_TOOLTIP_TEXT_JOIN='Crea un texto mediante la unión de dos trozos de texto.';
Blockly.MIXLY_TOOLTIP_TEXT_TOTEXT = 'Convierte un numero en un string.';
Blockly.MIXLY_TOOLTIP_TEXT_TOCHAR = 'Devuelve el carácter correspondiente a un código ASCII.';
Blockly.MIXLY_TOOLTIP_TEXT_TOASCII =' Devuelve el código ASCII correspondiente a un carácter.';
Blockly.MIXLY_TOOLTIP_TEXT_TOINT='Convierte un valor tipo string en un valor tipo integer.';
Blockly.MIXLY_TOOLTIP_TEXT_TOFLOAT='Convierte un valor tio string en un valor tipo float.';
Blockly.MIXLY_TOOLTIP_LISTS_CREATE_WITH_TEXT = "Crea una lista de un texto.";
Blockly.MIXLY_TOOLTIP_LOGIT_TRUEORFALSE='Si el primer número es cierto, se devuelve el segundo número, de lo contrario el tercer número.';
Blockly.MIXLY_TOOLTIP_BLOCKGROUP_SERIAL_AVAILABLE='Si el puerto serie está disponible, se devuelve true, en caso contrario devuelve false.';
Blockly.MIXLY_TOOLTIP_BLOCKGROUP_SERIAL_READ_STR='devuelve un valor tipo string en el puerto serie.';
Blockly.MIXLY_TOOLTIP_BLOCKGROUP_SERIAL_READ_INT='devuelve un valor tipo integer en el puerto serie.';
Blockly.MIXLY_TOOLTIP_BLOCKGROUP_SERIAL_READ_FLOAT='Devuelve un valor tipo float en el puerto serie.';
Blockly.MIXLY_TOOLTIP_BLOCKGROUP_CHAOSHENGBO='Devuelve la distancia medida del sensor ultrasónico.';
Blockly.MIXLY_TOOLTIP_BLOCKGROUP_GET_TEM='Devuelve la temperatura medida en el sensor DHT11.';
Blockly.MIXLY_TOOLTIP_BLOCKGROUP_GET_HUM = 'Devuelve la humedad medida del sensor DHT11.';
Blockly.MIXLY_TOOLTIP_BLOCKGROUP_SERVO_MOVE = 'Se mueve entre 0 ~ 180 grados.';
Blockly.MIXLY_TOOLTIP_BLOCKGROUP_SERVO_READ = 'Devuelve los grados girados en el último movimiento de u servo.';
Blockly.MIXLY_TOOLTIP_BLOCKGROUP_TONE = 'Reproduce sonido con la frecuencia especificada.';
Blockly.MIXLY_TOOLTIP_BLOCKGROUP_TONE2 = 'Reproduce sonido en función de la frecuencia y la duración especificada.';
Blockly.MIXLY_TOOLTIP_BLOCKGROUP_NOTONE = 'Detiene el sonido.';
//untranslated
Blockly.LUXE_LED='LED #';
Blockly.LUXE_MOTOR='Motor #';
Blockly.LUXE_STAT='Stat';
Blockly.LUXE_SPEED='Speed';
Blockly.LUXE_DIR='Direction';
Blockly.LUXE_LED_ON='ON';
Blockly.LUXE_LED_OFF='OFF';
Blockly.LUXE_MOTOR_FORWARD='Clockwise';
Blockly.LUXE_MOTOR_REVERSE='Counterclockwise';
Blockly.LUXE_LED_CHANGE='change';
Blockly.LUXE_MOTOR_CHANGE='changeDirection';
Blockly.LUXE_MOTOR_STOP='stop';
Blockly.LUXE_SPEAKER_PLAYSOUND='Play sound';
Blockly.LUXE_SPEANER_NOSOUND='No sound';
Blockly.LUXE_SPEAKER_FREQUENCY='frequency';
Blockly.LUXE_SPEAKER_DURATION='duration';

//-----------------NOVA---------------------------------
Blockly.MIXLY_NOVA_PORT = 'Port';
Blockly.MIXLY_NOVA_STAT = 'Set';
Blockly.MIXLY_NOVA_GET_STAT = 'Get';

// LED
Blockly.MIXLY_NOVA_LED = 'LED';
Blockly.MIXLY_NOVA_LED_ON = 'ON';
Blockly.MIXLY_NOVA_LED_OFF = 'OFF';

// Button
Blockly.MIXLY_NOVA_BUTTON_PRESSED = 'Pressed';
Blockly.MIXLY_NOVA_BUTTON_RELEASED = 'Released';
Blockly.MIXLY_NOVA_BTN = 'Button ';
Blockly.MIXLY_NOVA_ABCD = '#';

Blockly.MIXLY_NOVA_TILTSWITCH = 'Tilt Switch';
Blockly.MIXLY_NOVA_SOUND = 'Sound'; 
Blockly.MIXLY_NOVA_LIMISWICTH = 'Limit Switch'; 
Blockly.MIXLY_NOVA_LIGHT = 'Light'; 

Blockly.MIXLY_NOVA_BUZZER = 'Buzzer'; 
Blockly.MIXLY_NOVA_FREQUENCY = 'Frequency(Hz)'; 
Blockly.MIXLY_NOVA_MIXLY_DURATION = 'Duration(ms)'; 

Blockly.MIXLY_NOVA_MOTOR = 'DC Motor'; 
Blockly.MIXLY_NOVA_MOTOR_SPEED = 'Speed(-100~100)%'; 

Blockly.MIXLY_NOVA_ULTRASONIC = 'Ultrasonic(cm)'; 

Blockly.MIXLY_NOVA_DHT11 = 'DHT11';
Blockly.MIXLY_NOVA_TYPE = 'Type';
Blockly.MIXLY_NOVA_DHT11_H = 'GetHumidity';
Blockly.MIXLY_NOVA_DHT11_T = 'GetTemperature';

Blockly.MIXLY_NOVA_SERVO = 'Servo';
Blockly.MIXLY_NOVA_DEGREE_0_180 = 'Degree（0~180）';
Blockly.MIXLY_NOVA_DELAY = 'Delay';
Blockly.MIXLY_NOVA_DELAY_MS = 'ms';

Blockly.MIXLY_NOVA_LINEFINDER = 'LineFinder';
Blockly.MIXLY_NOVA_L = 'LeftState';
Blockly.MIXLY_NOVA_R = 'RightState';
Blockly.MIXLY_NOVA_READ = 'GetLineState';

Blockly.MIXLY_NOVA_4DIGITDISPLAY = 'Digitdisplay';
Blockly.MIXLY_NOVA_NUMBER = 'Number';
Blockly.MIXLY_NOVA_DISPLAY_HOUR= 'Display Hour';
Blockly.MIXLY_NOVA_DISPLAY_MIN = 'Display Minute';

Blockly.MIXLY_NOVA_RTC = 'Real Time Clock';
Blockly.MIXLY_NOVA_RTC_SEC = 'Sec';
Blockly.MIXLY_NOVA_RTC_MIN = 'Min';
Blockly.MIXLY_NOVA_RTC_HOUR = 'Hour';
Blockly.MIXLY_NOVA_RTC_WEEK = 'Week';
Blockly.MIXLY_NOVA_RTC_DAY = 'Day';
Blockly.MIXLY_NOVA_RTC_MON = 'Mon';
Blockly.MIXLY_NOVA_RTC_YEAR = 'Year';

Blockly.MIXLY_NOVA_IR_REC = 'Infrared Receiver';

Blockly.MIXLY_NOVA_BLUETOOTH = 'Bluetooth';
Blockly.MIXLY_NOVA_BLUETOOTH_AVAILABLE = 'Available？';
Blockly.MIXLY_NOVA_BLUETOOTH_READ_STR = 'ReadString';
Blockly.MIXLY_NOVA_BLUETOOTH_READ_NUM = 'ReadNumber';

//spi
Blockly.TO_SPI_SLAVE_PIN='To SPI Slave PIN#';
Blockly.SPI_TRANSFER='transfer';

Blockly.MIXLY_SERIAL_BEGIN='velocidad en baudios';

//stepper
Blockly.MIXLY_STEPPER='Stepper';
Blockly.MIXLY_STEPPER_SETUP_STEPPER='Setup Stepper';
Blockly.MIXLY_STEPPER_PIN1='PIN1#';
Blockly.MIXLY_STEPPER_PIN2='PIN2#';
Blockly.MIXLY_STEPPER_PIN3='PIN3#';
Blockly.MIXLY_STEPPER_PIN4='PIN4#';
Blockly.MIXLY_STEPSPERREVOLUTION='steps per revolution';
Blockly.MIXLY_STEPPER_SET_SPEED='setSpeed';
Blockly.MIXLY_STEPPER_STEP='step';

//-----------------Ethernet------------------------------------
Blockly.MIXLY_ETHERNET_BEGIN='Begin (DHCP)';
Blockly.MIXLY_ETHERNET='Ethernet';
Blockly.MIXLY_ETHERNET2='Ethernet2';
Blockly.MIXLY_ETHERNET_MAC_ADDRESS='Mac Address';
Blockly.MIXLY_ETHERNET_LOCALIP='localIP';
Blockly.MIXLY_ETHERNET_CLINET_CONNECT_SERVER='Clinet.Connect Host';
Blockly.MIXLY_ETHERNET_CLINET_PORT='Port';
Blockly.MIXLY_ETHERNET_CLINET_STOP='Client.stop';
Blockly.MIXLY_ETHERNET_CLINET_CONNECTED='Client.connected';
Blockly.MIXLY_ETHERNET_CLINET_AVAILABLE='Client.available';
Blockly.MIXLY_ETHERNET_CLINET_PRINT='Client.print';
Blockly.MIXLY_ETHERNET_CLINET_PRINTLN='Client.println';
Blockly.MIXLY_ETHERNET_CLINET_READ='Client.read';
Blockly.MIXLY_ETHERNET_CLINET_GET_REQUEST='GET Request';
Blockly.MIXLY_ETHERNET_CLINET_URL='URL';
Blockly.MIXLY_ETHERNET_CLINET_SERVER='Host';
//lm35温度传感器
Blockly.MIXLY_LM35='LM35 Temperature';
//DS18B20温度传感器
Blockly.MIXLY_DS18B20='DS18B20 PIN#';
Blockly.MIXLY_DS18B20_GET_TEMP='getTemperature';
Blockly.MIXLY_DS18B20_C='°C';
Blockly.MIXLY_DS18B20_F='°F';

//GPS
Blockly.MIXLY_GPS_INIT='GPS init';
Blockly.MIXLY_GPS_DATA_AVAILABLE='GPS data is available';
Blockly.MIXLY_GPS_DATA_ENCODE='GPS encode data successful';
Blockly.MIXLY_GPS_LOCATION='location';
Blockly.MIXLY_GPS_DATE='date';
Blockly.MIXLY_GPS_TIME='time';
Blockly.MIXLY_GPS_ISVALID='isValid';
Blockly.MIXLY_GPS_GET='GPS get';
Blockly.MIXLY_GPS_LOCATION_LAT='location-latitude';
Blockly.MIXLY_GPS_LOCATION_LNG='location-longitude';
Blockly.MIXLY_GPS_DATE_YEAR='date-year';
Blockly.MIXLY_GPS_DATE_MONTH='date-month';
Blockly.MIXLY_GPS_DATE_DAY='date-day';
Blockly.MIXLY_GPS_TIME_HOUR='time-hour';
Blockly.MIXLY_GPS_TIME_MINUTE='time-minute';
Blockly.MIXLY_GPS_TIME_SECOND='time-second';
Blockly.MIXLY_GPS_TIME_CENTISECOND='time-centisecond';

//factory
Blockly.MIXLY_PARAMS = 'parameters';

//MsTimer2
Blockly.MIXLY_MSTIMER2_EVERY='every';
Blockly.MIXLY_MSTIMER2_DO='do';
Blockly.MIXLY_MSTIMER2_START='start';
Blockly.MIXLY_MSTIMER2_STOP='stop';
//interrupts
Blockly.MIXLY_CONTROL_INTERRUPTS = 'interrupciones';
Blockly.MIXLY_CONTROL_NOINTERRUPTS = 'no interrupciones';
//others
Blockly.MIXLY_WARNING_NOT_DECLARE='This variable is not declared!';
Blockly.MIXLY_LENGTH = "longitud de";
Blockly.MIXLY_EQUALS="equals";
Blockly.MIXLY_STARTSWITH="startsWith";
Blockly.MIXLY_ENDSWITH="endsWith";
Blockly.MIXLY_COMPARETO="compareTo";
Blockly.MIXLY_COMPARETO_HELP = "comparar basado en dictory, igual retrun 0, mayor retorno positivo, else return negative";
Blockly.Msg.UNDO = "Deshacer";
Blockly.Msg.REDO = "Rehacer";
Blockly.MIXLY_CONTROL_END_PROGRAM = "fin del programa";

//oled
Blockly.Msg.texttodisplay = "texts to display:";
Blockly.Msg.OLEDDISPLAY = "display";
Blockly.Msg.todisplay = "to display:";
Blockly.Msg.rawx = "raw x(127 max)";
Blockly.Msg.liney = "line y(63 max)";
Blockly.Msg.line1 = "line1=";
Blockly.Msg.line2 = "line2=";
Blockly.Msg.line3 = "line3=";
Blockly.Msg.line4 = "line4=";
Blockly.Msg.num1 = "Number 1(at end)=";
Blockly.Msg.num2 = "Number 2(at end)=";
Blockly.Msg.num3 = "Number 3(at end)=";
Blockly.Msg.num4 = "Number 4(at end)=";
// RGB
Blockly.MIXLY_RGB = 'RGB Luz';
Blockly.MIXLY_RGB_NUM = 'Luz Número';
Blockly.MIXLY_RGB_COUNT = 'Luz Conde';
Blockly.MIXLY_RGB_R = 'R Valor';
Blockly.MIXLY_RGB_G = 'G Valor';
Blockly.MIXLY_RGB_B = 'B Valor';

//四位数码管
Blockly.MIXLY_4DIGITDISPLAY = 'Digital Mostrar';
Blockly.MIXLY_4DIGITDISPLAY_DISPLAYSTRING = 'Mostrar la cadena';
Blockly.MIXLY_4DIGITDISPLAY_NOMBER1 = 'No.';
Blockly.MIXLY_4DIGITDISPLAY_NOMBER2 = '';
Blockly.MIXLY_4DIGITDISPLAY_DOT = 'Dot';
Blockly.MIXLY_4DIGITDISPLAY_ON = 'En';
Blockly.MIXLY_4DIGITDISPLAY_OFF = 'Off';

//TM1637
Blockly.MIXLY_4DIGITDISPLAY_TM1637 = 'TM1637';
Blockly.MIXLY_4DIGITDISPLAY_TM1637_DISPLAYSTRING = 'tm1637 Show (pergamino) cadena';
Blockly.MIXLY_4DIGITDISPLAY_TM1637_DISPLAYSTRING_TIP = '';
Blockly.MIXLY_4DIGITDISPLAY_TM1637_TIP = '';
Blockly.MIXLY_4DIGITDISPLAY_TM1637_DISPLAYTIME = 'TM1637 Show';
Blockly.MIXLY_4DIGITDISPLAY_TM1637_DISPLAYTIME_TOOLTIP = '';
Blockly.MIXLY_4DIGITDISPLAY_TM1637_INIT = 'TM1637 Init';
Blockly.MIXLY_4DIGITDISPLAY_STOPWATCH = 'Cronometro';
Blockly.MIXLY_4DIGITDISPLAY_TM1637_STOPWATCH_TOOLTIP = '';
Blockly.MIXLY_4DIGITDISPLAY_STOPWATCH_START = 'Inicio';
Blockly.MIXLY_4DIGITDISPLAY_STOPWATCH_PAUSE = 'Pausa';
Blockly.MIXLY_4DIGITDISPLAY_STOPWATCH_RESET = 'Reset';
Blockly.MIXLY_4DIGITDISPLAY_TM1637_BRIGHTNESS = 'TM1637 Brillo';
Blockly.MIXLY_4DIGITDISPLAY_4DIGITDISPLAY_BRIGHTNESS_TOOLTIP = '';

Blockly.MIXLY_YEAR = 'Y';
Blockly.MIXLY_MONTH = 'M';
Blockly.MIXLY_DAY = 'D';
Blockly.MIXLY_HOUR = 'H';
Blockly.MIXLY_MINUTE = 'M';
Blockly.MIXLY_SECOND = 'S';
Blockly.MIXLY_WEEK = 'Semana';

Blockly.MIXLY_DS1302_INITPIN = 'Inicializar modulo RTC CLOCK DS1302 PIN'
Blockly.MIXLY_SETDATE = 'SetDate:';
Blockly.MIXLY_DATEFORMATE = 'DateFormat(Y-M-D)'
Blockly.MIXLY_TIMEFORMATE = 'TimeFormat(H:M:S)'
Blockly.MIXLY_DISPLAY_MATRIX_INIT = "Init * 8 * 8 Pantalla DOT MATRIX display";
Blockly.MIXLY_DISPLAY_MATRIX_SHOW = "Pantalla de matriz de puntos";
Blockly.MIXLY_DISPLAY_MATRIX_X = 'Eje X';
Blockly.MIXLY_DISPLAY_MATRIX_Y = 'Eje Y';
Blockly.MIXLY_DISPLAY_MATRIX_SHOWPOINT = ' único punto a';
Blockly.MIXLY_DISPLAY_MATRIX_SHOWPOINT_TOOLTIP = 'único punto de operación en la pantalla de matriz de puntos, rango de valores del eje XY - 8';
Blockly.MIXLY_DISPLAY_MATRIX_CLEAR = " Dot Matrix claro";
Blockly.MIXLY_DISPLAY_MATRIX_ARRAYVAR = "Variable array";
Blockly.MIXLY_DISPLAY_MATRIX_PICARRAY = " Pictur array";
Blockly.MIXLY_DISPLAY_MATRIX_ROTATE = "Rotar la pantalla";

Blockly.MIXLY_RTCINIT = 'Inicializar modulo RTC CLOCK DS1307 ';
Blockly.MIXLY_RTCGETTIME = 'Leer la hora del Modulo RTC CLOCK';
Blockly.MIXLY_RTCSETTIME = 'Establecer el tiempo de Module RTC CLOCK';
Blockly.MIXLY_RTCSETDATE = 'Fecha de creación del Modulo RTC CLOCK';

Blockly.MIXLY_ADXL345 = 'Acceleration_ADXL345';
Blockly.MIXLY_ADXL345_X = 'Aceleración del eje X';
Blockly.MIXLY_ADXL345_Y = 'Aceleración del eje Y';
Blockly.MIXLY_ADXL345_Z = 'Aceleración del eje Z';
Blockly.MIXLY_ADXL345_XA = 'ángulo del eje X';
Blockly.MIXLY_ADXL345_YA = 'Ángulo del eje Y';
Blockly.MIXLY_ADXL345_ZA = 'Ángulo del eje Z';
//////////// microbit js ///////////////////
Blockly.MIXLY_MICROBIT_JS_IS_GESTURE='es gesto ';
Blockly.MIXLY_MICROBIT_JS_SERIAL_WHEN_CONTAIN_DATA='cuando la serie de datos que contengan recevied ';
Blockly.MIXLY_MICROBIT_JS_SERIAL_READ_LINE='leer una línea serie';
Blockly.MIXLY_MICROBIT_JS_RANDOM_BOOLEAN='random verdadero o falso';
Blockly.MIXLY_MICROBIT_JS_PERIOD='periodo establecido(us)';
Blockly.MIXLY_MICROBIT_JS_LAST_PULSE_PERIOD='conseguir el período (us) del último pulso';
Blockly.MIXLY_MICROBIT_JS_PULSE_STATUS='modo de pulso';
Blockly.MIXLY_MICROBIT_JS_RADIO_SEND_NUMBER='número de radio Enviar';
Blockly.MIXLY_MICROBIT_JS_RADIO_SEND_VALUE='el valor de radio Enviar';
Blockly.MIXLY_MICROBIT_JS_RADIO_SEND_STRING='radio send string';
Blockly.MIXLY_MICROBIT_JS_RADIO_ON_RECEIVE='cadena de radio Enviar';
Blockly.MIXLY_MICROBIT_JS_RADIO_SET_GROUP='radio group';
Blockly.MIXLY_MICROBIT_JS_RADIO_SET_TRANSMIT_POWER='radio de transmisión de potencia';
Blockly.MIXLY_MICROBIT_JS_RADIO_SET_TRANSMIT_SERIAL_NUMBER='número de serie de radio transmitir';
Blockly.MIXLY_MICROBIT_JS_RADIO_WRITE_RECEIVE_PACKET_TO_SERIAL='radio escribir paquete recibido a serial';
Blockly.MIXLY_MICROBIT_JS_CREATE_SPRITE='crear sprite en y:';
Blockly.MIXLY_MICROBIT_JS_Y='y:';
Blockly.MIXLY_MICROBIT_JS_MOVE_BY='moverse por';
Blockly.MIXLY_MICROBIT_JS_DELETE_VAR='borrar';
Blockly.MIXLY_MICROBIT_JS_TURN='turn';
Blockly.MIXLY_MICROBIT_JS_BY_ANGLE='por (angulo)';
Blockly.MIXLY_MICROBIT_JS_NUMBER='por';
Blockly.MIXLY_MICROBIT_JS_CHANGE='cambio';
Blockly.MIXLY_MICROBIT_JS_TOUCH='contacto';
Blockly.MIXLY_MICROBIT_JS_TOUCH_EDGE='toque el borde?';
Blockly.MIXLY_MICROBIT_JS_CHANGE_SCORE='cambiar puntos por';
Blockly.MIXLY_MICROBIT_JS_SET_SCORE='set score';
Blockly.MIXLY_MICROBIT_JS_ON_EDGE_BOUNCE='si en el borde, salta'
Blockly.MIXLY_MICROBIT_JS_START_COUNTDOWN='comenzar cuenta regresiva(ms)';
Blockly.MIXLY_MICROBIT_JS_SCORE='puntuacion del juego';
Blockly.MIXLY_MICROBIT_JS_GAME_OVER='game over';
Blockly.MIXLY_MICROBIT_JS_GAME_RESUME='juego reanudar';
Blockly.MIXLY_MICROBIT_JS_GAME_PAUSE='juego Pausa';
Blockly.MIXLY_MICROBIT_JS_ACCELERATION='aceleración (mg)';
Blockly.MIXLY_MICROBIT_JS_SET_ACCELERATION='set rango de aceleración';
Blockly.MIXLY_MICROBIT_JS_LIGHT_LEVEL='nivel de luz';
Blockly.MIXLY_MICROBIT_JS_CALIBRATE_COMPASS='calibrar brujula';
Blockly.MIXLY_MICROBIT_JS_GET_COMPASS = 'obtener brújula';
Blockly.MIXLY_MICROBIT_JS_COMPASS_HEADING='brújula (angulo)';
Blockly.MIXLY_MICROBIT_JS_ROTATION='rotación (angulo)';
Blockly.MIXLY_MICROBIT_JS_MAGETIC_FORCE='fuerza magnética (uT)';
Blockly.MIXLY_MICROBIT_JS_BEAT='beats';
Blockly.MIXLY_MICROBIT_JS_RING_TONE='ring tone (Hz)';
Blockly.MIXLY_MICROBIT_JS_REST_TONE='descanso(ms)';
Blockly.MIXLY_MICROBIT_JS_START_MELODY='empezar a melody';
Blockly.MIXLY_MICROBIT_JS_MUSIC_EVENT='música en';
Blockly.MIXLY_MICROBIT_JS_GET_TEMPO='tempo (bpm)';
Blockly.MIXLY_MICROBIT_JS_CHANGE_TEMPO='Cambiar el tempo por (bpm)';
Blockly.MIXLY_MICROBIT_JS_SET_TEMPO='tempo establecido a (bpm)';
Blockly.MIXLY_MICROBIT_JS_I2C_READ_ADDRESS='i2c leído el número en la direccion';
Blockly.MIXLY_MICROBIT_JS_I2C_FORMAT='de formato';
Blockly.MIXLY_MICROBIT_JS_I2C_WRITE_ADDRESS='i2c escribir el número en la direccion';
Blockly.MIXLY_MICROBIT_JS_I2C_VALUE='de valor';
Blockly.MIXLY_MICROBIT_JS_I2C_BIT = 'byte';
Blockly.MIXLY_MICROBIT_JS_I2C_SETUP = 'i2c init';
Blockly.MIXLY_MICROBIT_JS_SPI_WRITE="spi write";
Blockly.MIXLY_MICROBIT_JS_SPI_FREQUENCY="spi frecuencia";
Blockly.MIXLY_MICROBIT_JS_SPI_FORMAT="spi formato";
Blockly.MIXLY_MICROBIT_JS_SPI_SET_PINS="spi set clavijas";
Blockly.MIXLY_MICROBIT_JS_BLE_SERVICE='servicio de bluetooth';
Blockly.MIXLY_MICROBIT_JS_BLE_ON_CONNECTED='el bluetooth conectado';
Blockly.MIXLY_MICROBIT_JS_BLE_ON_DISCONNECTED='el bluetooth desconectado';
Blockly.MIXLY_MICROBIT_JS_BLE_ON_RECEIVE='bluetooth en los datos recibidos';
Blockly.MIXLY_MICROBIT_JS_BLE_CONNECTED='conectable';
Blockly.MIXLY_MICROBIT_JS_BLE_NAMESPACE='namespace(bytes 6-9)';
Blockly.MIXLY_MICROBIT_JS_BLE_INSTANCE='ejemplo(bytes 2-6)';
Blockly.MIXLY_MICROBIT_JS_BLE_POWER='power';
Blockly.MIXLY_MICROBIT_JS_BLE_URL='url'
Blockly.MIXLY_MICROBIT_JS_BLE_WRITE_NUMBER='bluetooth uart escriba el número';
Blockly.MIXLY_MICROBIT_JS_BLE_WRITE_STRING='bluetooth uart escriba la cadena';
Blockly.MIXLY_MICROBIT_JS_BLE_WRITE_VALUE='bluetooth uart escriba el valor';
Blockly.MIXLY_MICROBIT_JS_BLE_UART_SERVICE='bluetooth uart servicio';
Blockly.MIXLY_MICROBIT_JS_BLE_STOP_ADVERTISING='bluetooth para publicidad';
Blockly.MIXLY_MICROBIT_JS_BLE_SET_POWER='bluetooth conjunto potencia de transmisión';
Blockly.MIXLY_MICROBIT_JS_BLE_READ_UNTIL='bluetooth uart leer hasta';
Blockly.MIXLY_MICROBIT_JS_BLE_URL_CONNECTED='bluetooth publicidad de url.conectable';
Blockly.MIXLY_MICROBIT_JS_BLE_UID_CONNECTED='bluetooth anunciar uid.conectable';
Blockly.MIXLY_MICROBIT_JS_SYSTEM_RUN_BACKGROUND='run in background';
Blockly.MIXLY_MICROBIT_JS_SYSTEM_RESET='reset';
Blockly.MIXLY_MICROBIT_JS_SYSTEM_WAIT='espera (us)';
Blockly.MIXLY_MICROBIT_JS_SYSTEM_RAISE_SOURCE='elevar el caso de fuente';
Blockly.MIXLY_MICROBIT_JS_SYSTEM_RAISE_VALUE='con valor';
Blockly.MIXLY_MICROBIT_JS_SYSTEM_ON_SOURCE='en el caso de la fuente';
Blockly.MIXLY_MICROBIT_JS_SYSTEM_TIMESTAMP='evento timestamp';
Blockly.MIXLY_MICROBIT_JS_SYSTEM_VALUE='acto de valor';
Blockly.MIXLY_MICROBIT_JS_SYSTEM_DEVICE_NAME='nombre del dispositivo';
Blockly.MIXLY_MICROBIT_JS_SYSTEM_DEVICE_SERIAL_NUMBER='numero de serie del dispositivo';
Blockly.MIXLY_MICROBIT_JS_MONITOR_SHOW_NUMBER='mostrar número';
Blockly.MIXLY_MICROBIT_JS_MONITOR_SHOW_STRING='mostrar la cadena';
Blockly.MIXLY_MICROBIT_JS_MONITOR_SHOW_STRING_ONE_BY_ONE='mostrar';
Blockly.MIXLY_MICROBIT_JS_MONITOR_SHOW_LEDS='mostrar LED';
Blockly.MIXLY_MICROBIT_JS_MONITOR_SHOW_ARROW='mostrar la flecha';
Blockly.MIXLY_MICROBIT_JS_MONITOR_CLEAR_SCREEN='pantalla clara';
Blockly.MIXLY_MICROBIT_JS_MONITOR_PLOT_POINT_X='parcela x';
Blockly.MIXLY_MICROBIT_JS_MONITOR_PLOT_POINT_Y='y';
Blockly.MIXLY_MICROBIT_JS_MONITOR_UNPLOT_POINT_X='unplot x';
Blockly.MIXLY_MICROBIT_JS_MONITOR_TOGGLE_POINT_X='toggle x';
Blockly.MIXLY_MICROBIT_JS_MONITOR_GET_POINT_X='punto x';
Blockly.MIXLY_MICROBIT_JS_MONITOR_PLOT_BAR_START='gráfico de barras de la parcela';
Blockly.MIXLY_MICROBIT_JS_MONITOR_PLOT_BAR_END='hasta';
Blockly.MIXLY_MICROBIT_JS_MONITOR_BRIGHTNESS='brillo';
Blockly.MIXLY_MICROBIT_JS_MONITOR_SET_BRIGHTNESS='set brillo';
Blockly.MIXLY_MICROBIT_JS_MONITOR_STOP_ANIMATION='deja de animacion';
Blockly.MIXLY_MICROBIT_JS_MONITOR_LED_ENABLE='led que';
Blockly.MIXLY_MICROBIT_JS_MONITOR_SHOW_IMAGE='mostrar imagen';
Blockly.MIXLY_MICROBIT_JS_MONITOR_AT_OFFSET='en offset';
Blockly.MIXLY_MICROBIT_JS_MONITOR_CREATE_IMAGE='crear imagen';
Blockly.MIXLY_MICROBIT_JS_MONITOR_SCROLL_IMAGE='scroll image';
Blockly.MIXLY_MICROBIT_JS_MONITOR_WITH_OFFSET='con offset';
Blockly.MIXLY_MICROBIT_JS_MONITOR_SCROLL_INTERVAL='el intervalo(ms)';
Blockly.MIXLY_MICROBIT_JS_MONITOR_CREATE_BIG_IMAGE='crear imagen grande';
Blockly.MIXLY_MICROBIT_JS_MONITOR_ARROW_IMAGE='imagen de flecha';
Blockly.MIXLY_MICROBIT_JS_TYPE_NUMBER='número';
Blockly.MIXLY_MICROBIT_JS_TYPE_STRING='string';
Blockly.MIXLY_MICROBIT_JS_TYPE_BOOLEAN='boolean';
Blockly.MIXLY_MICROBIT_JS_TYPE_ARRAY_NUMBER='Array<número>';
Blockly.MIXLY_MICROBIT_JS_TYPE_ARRAY_STRING='Array<string>';
Blockly.MIXLY_MICROBIT_JS_LIST_ADD_VALUE='añadir valor';
Blockly.MIXLY_MICROBIT_JS_LIST_TO_END='a final';
Blockly.MIXLY_MICROBIT_JS_LIST_GET_AND_REMOVE_LAST='obtener y eliminar el ultimo valor de ';
Blockly.MIXLY_MICROBIT_JS_LIST_INSERT_AT='insertar en';
Blockly.MIXLY_MICROBIT_JS_LIST_VALUE='valor';
Blockly.MIXLY_MICROBIT_JS_LIST_REVERSE='marcha atrás';
Blockly.MIXLY_MICROBIT_JS_LIST_CLEAR='claro';
Blockly.MIXLY_MICROBIT_JS_LIST_GET_AND_REMOVE_FIRST='conseguir y quitar el primer valor de';
Blockly.MIXLY_MICROBIT_JS_LIST_INSERT='insertar';
Blockly.MIXLY_MICROBIT_JS_LIST_AT_BEGINNING='en principio';
Blockly.MIXLY_MICROBIT_JS_LIST_FIND_INDEX_OF='encontrar el indice de';
Blockly.MIXLY_MICROBIT_JS_LIST_REMOVE_VALUE_AT='quitar valor a';
Blockly.MIXLY_MICROBIT_JS_LIST_REMOVE_VALUE_XIANG='';
Blockly.MIXLY_MICROBIT_JS_INTERRUPT_BTN = 'Botón de interrupción #';

Blockly.MIXLY_MICROBIT_JS_INOUT_ANALOG_PITCH = 'analog pitch ';
Blockly.MIXLY_MICROBIT_JS_INOUT_FREQUENCY ='para (ms)';
Blockly.Msg.INOUT_ANALOGPITCH  = "analog pitch durante algún tiempo";
Blockly.MIXLY_MICROBIT_JS_INOUT_SETPIN  = "set pin#";
Blockly.MIXLY_MICROBIT_JS_INOUT_EMITEVENTS  = "para emitir";
Blockly.MIXLY_MICROBIT_JS_INOUT_EVENT_EDGE = "borde";
Blockly.MIXLY_MICROBIT_JS_INOUT_EVENT_PULSE = "pulso";
Blockly.MIXLY_MICROBIT_JS_INOUT_EVENT_TOUCH = "contacto";
Blockly.MIXLY_MICROBIT_JS_INOUT_EVENT_NONE = "ninguno";
Blockly.MIXLY_MICROBIT_JS_INOUT_SETPULL  = "a";
Blockly.Msg.INOUT_SETEVENT  = "configurar la emiten el evento por el pin";
Blockly.MIXLY_MICROBIT_JS_INOUT_PULL_UP = "tire";
Blockly.MIXLY_MICROBIT_JS_INOUT_PULL_DOWN = "Abajo";
Blockly.MIXLY_MICROBIT_JS_INOUT_PULL_NONE = "ninguno";
Blockly.Msg.INOUT_SETPULL  = "configurar el tiron de la pin";
Blockly.MIXLY_MICROBIT_JS_INOUT_SET_PITCH_PIN  = "analog set pitch pines#";
Blockly.Msg.INOUT_SET_PITCH_PIN  = "establecer el tono analogico Pin";
Blockly.MIXLY_MICROBIT_shake='shake';
Blockly.MIXLY_MICROBIT_up='arriba';
Blockly.MIXLY_MICROBIT_down='abajo';
Blockly.MIXLY_MICROBIT_left='izquierda';
Blockly.MIXLY_MICROBIT_right='derecho';
Blockly.MIXLY_MICROBIT_face_up='cara arriba';
Blockly.MIXLY_MICROBIT_face_down='boca abajo';
Blockly.MIXLY_MICROBIT_freefall='caída libre';
//microbit
Blockly.MIXLY_MICROBIT_Accelerometer_X='aceleración (Dimensión.X)';
Blockly.MIXLY_MICROBIT_Accelerometer_Y='aceleración (Dimensión.Y)';
Blockly.MIXLY_MICROBIT_Accelerometer_Z='aceleración (Dimensión.Z)';
Blockly.MIXLY_MICROBIT_Was_gesture='era el gesto %1';
Blockly.MIXLY_MICROBIT_Is_gesture='es gesto %1';
Blockly.MIXLY_MICROBIT_shake='shake';
Blockly.MIXLY_MICROBIT_up='arriba';
Blockly.MIXLY_MICROBIT_down='abajo';
Blockly.MIXLY_MICROBIT_left='izquierda';
Blockly.MIXLY_MICROBIT_right='derecho';
Blockly.MIXLY_MICROBIT_face_up='cara arriba';
Blockly.MIXLY_MICROBIT_face_down='boca abajo';
Blockly.MIXLY_MICROBIT_freefall='caída libre';
Blockly.MIXLY_MICROBIT_Get_gestures='conseguir gestos';
Blockly.MIXLY_MICROBIT_Current_gesture='gesto actual';
Blockly.MIXLY_MICROBIT_Button_is_pressed='Se pulsa el botón %1';
Blockly.MIXLY_MICROBIT_Button_was_pressed='se ha pulsado el botón %1';
Blockly.MIXLY_MICROBIT_Get_number_of_presses_for_button='obtener el número de prensas para botón %1 ';
Blockly.MIXLY_MICROBIT_Calibrate_compass='calibrar brujula';
Blockly.MIXLY_MICROBIT_Compass_is_calibrated='la brújula está calibrado？';
Blockly.MIXLY_MICROBIT_Compass_heading='brújula';
Blockly.MIXLY_MICROBIT_Compass_field_strength='brújula de intensidad de campo';
Blockly.MIXLY_MICROBIT_Get_brightness_at='sacar brillo X %1 Y %2';
Blockly.MIXLY_MICROBIT_Set_brightness_at='set X %1 Y %2 brillo %3';
Blockly.MIXLY_MICROBIT_Clear_display='pantalla clara';
Blockly.MIXLY_MICROBIT_Show_image='mostrar imagen %1';
Blockly.MIXLY_MICROBIT_Animate_images='animar la imagen %1 demora %2 (ms) %3 esperar %4 %5 repetir %6 %7 claro %8';
Blockly.MIXLY_MICROBIT_Scroll_message='desplazarse un mensaje %1';
Blockly.MIXLY_MICROBIT_Turn_on_display='turno en diaplay';
Blockly.MIXLY_MICROBIT_Turn_off_display='apagar la pantalla';
Blockly.MIXLY_MICROBIT_monitor = "Pantalla";
Blockly.MIXLY_MICROBIT_Display_is_on='display es en？';
Blockly.MIXLY_MICROBIT_Built_in_image='construido en la imagen %1';
Blockly.MIXLY_MICROBIT_Copy_image='copiar imagen %1';
Blockly.MIXLY_MICROBIT_Invert_image='invertir imagen %1';
Blockly.MIXLY_MICROBIT_Create_image='crear imagen %1 %2 %3 %4 %5 %6 %7 %8 %9 %10 %11 %12 %13 %14 %15 %16 %17 %18 %19 %20 %21 %22 %23 %24 %25 %26 %27 %28 %29 %30';
Blockly.MIXLY_MICROBIT_Panic_with_status_code='El pánico con el Código de Estado %1';
Blockly.MIXLY_MICROBIT_Sleep='dormir %1 (ms)';
Blockly.MIXLY_MICROBIT_Running_time='tiempo de funcionamiento';
Blockly.MIXLY_MICROBIT_Board_temperature='junta de temperatura';
Blockly.MIXLY_MICROBIT_Reset_micro='reset micro:bit';
Blockly.MIXLY_MICROBIT_Play_built_in_melody='jugar con la melodia %1 %2 esperar %3 %4 repetir %5';
Blockly.MIXLY_MICROBIT_Play_built_in_melody_easy='jugar con la melodia %1 %2';
Blockly.MIXLY_MICROBIT_Play_pitch='jugar pitch %1 %2 %3 ms';
Blockly.MIXLY_MICROBIT_Play_notes='jugar tono %1 espera para %2 %3 %4 de repetir';
Blockly.MIXLY_MICROBIT_Reset_music='reset music';
Blockly.MIXLY_MICROBIT_Stop_music='parar la música';
Blockly.MIXLY_MICROBIT_Set_tempo='tempo establecido: 1 Beat %1 en %2 BPM garrapatas';
Blockly.MIXLY_MICROBIT_Get_current_tempo='get current tempo';
Blockly.MIXLY_MICROBIT_Initialise_pin='inicializar pin %1 with %2 neopixel[s] %3';
Blockly.MIXLY_MICROBIT_Clear_neopixels='claro neopixels sobre %1';
Blockly.MIXLY_MICROBIT_Show_neopixels='mostrar neopixels sobre%1';
Blockly.MIXLY_MICROBIT_Using_neopixels='utilizando neopixels sobre %1 juego pixel en la posicion %2 %3 %4 rojo verde azul %5';
Blockly.MIXLY_MICROBIT_Switch_on_radio='enciende la radio';
Blockly.MIXLY_MICROBIT_Switch_off_radio='apague la radio';
Blockly.MIXLY_MICROBIT_Configure_radio='configurar la radio de longitud de %1 %3  canal cola %5  potencia %7 %8 %9 Tasa de datos';
Blockly.MIXLY_MICROBIT_SPI_INIT='spi inicializar (velocidad en baudios) %1 bits %3 el modo %5 %6 MOSI# %7 MISO# %8 SCK# %9';
Blockly.MIXLY_MICROBIT_Reset_radio='reset radio';
Blockly.MIXLY_MICROBIT_Send_message='enviar mensaje %1';
Blockly.MIXLY_MICROBIT_Receive_message='recibir mensaje';
Blockly.MIXLY_MICROBIT_Say='decir %1';
Blockly.MIXLY_MICROBIT_Pronounce='pronunciar %1';
Blockly.MIXLY_MICROBIT_Sing='cantar %1';
Blockly.MIXLY_MICROBIT_Pin_touched='pin# %1 tocado？';
Blockly.MIXLY_MICROBIT_Read_analog='leer pin analogico# %1';
Blockly.MIXLY_MICROBIT_Write_analog='analog escribir el pin# %2 to %1';
Blockly.MIXLY_MICROBIT_Read_digital='lectura digital pin# %1';
Blockly.MIXLY_MICROBIT_Write_digital='escribir el pin digital# %2 to %1';
Blockly.MIXLY_MICROBIT_JS_WAS_GESTURE='en ';
Blockly.MIXLY_MICROBIT_JS_GET = 'get';
Blockly.MIXLY_MICROBIT_JS_GET_GESTURE = 'obtener gesto';
Blockly.MIXLY_MICROBIT_JS_CURRENT_GESTURE = 'gesto actual';
Blockly.MIXLY_MICROBIT_JS_GESTURE = 'gesto';
Blockly.MIXLY_MICROBIT_JS_FIELD_STRENGTH='la fuerza del campo';
Blockly.MIXLY_MICROBIT_JS_IS_COMPASS_CALIBRATED='esta brújula calibrada';
Blockly.MIXLY_IS_TOUCHED='es tocado';
Blockly.MIXLY_WAS_PRESSED='fue presionado';
Blockly.MIXLY_GET_PRESSES='conseguir prensas';

Blockly.MIXLY_MICROBIT_JS_MONITOR_SCROLL_STRING='El despliegue de una cadena de caracteres';
Blockly.MIXLY_MICROBIT_PY_ACTUATOR_SPEECH_SAY='Dice';
Blockly.MIXLY_MICROBIT_PY_ACTUATOR_SPEECH_SING='Cantar';
Blockly.MIXLY_MICROBIT_PY_ACTUATOR_SPEECH_PRENOUNCE='Leer';

Blockly.Msg.LISTS_NAME_TOOLTIP='La lista de nombres de entrada';
Blockly.blockpy_LIST_ADD_LIST='Aumentar la lista de';
Blockly.Msg.blockpy_LISTS_CREATE_WITH_INPUT_WITH ='En la lista de inicialización';
Blockly.MIXLY_blockpy_TOOLTIP_LISTS_CREATE_WITH_TEXT='A través de una cadena de caracteres para crear una lista.';
Blockly.Msg.blockpy_LISTS_CREATE_WITH_TOOLTIP='La creación de una lista con cualquier cantidad de proyectos.';
Blockly.blockpy_MIXLY_SPLITBYDOU='La creación de listas';
Blockly.Msg.blockpy_LISTS_LENGTH_TOOLTIP ='La longitud de la lista de regreso.';
Blockly.blockpy_LANG_LISTS_GET_INDEX_TOOLTIP ='La lista de la ubicación especificada en el regreso de los valores.';
Blockly.blockpy_LANG_LISTS_SET_INDEX_TOOLTIP ='Configuración de la lista de la ubicación especificada en el valor.';
Blockly.Msg.LISTS_GET_INDEX_RANDOM2 ='La lista de sacar al azar';
Blockly.Msg.LISTS_GET_INDEX_RANDOM3 ='Una de las';

Blockly.Msg.MATH_ZHENGCHU_SYMBOL = "//";
Blockly.MIXLY_MICROBIT_JS_PERIOD_MIL='El ciclo (milisegundos)';
Blockly.MIXLY_TOOLTIP_INOUT_ANALOG_WRITE_PY = 'Fijar valores de especificar los pies(0-1023)';

Blockly.Msg.LISTS_ISEMPTY_TITLE='¿Es el vacío?';
Blockly.Msg.LISTS_SORT_TITLE ='Para ordenar la lista de %1 %2 %3';
Blockly.Msg.LISTS_SORT_TYPE_NUMERIC ='Según el número de';
Blockly.Msg.LISTS_SORT_TYPE_TEXT ='De acuerdo con las letras';
Blockly.Msg.LISTS_SORT_TYPE_IGNORECASE ='En orden alfabético (ignorando';
Blockly.Msg.LISTS_SORT_ORDER_ASCENDING='En orden ascendente';
Blockly.Msg.LISTS_SORT_ORDER_DESCENDING='DESC';
Blockly.Msg.DISPLAY_IMAGE_LET='La imagen se';
Blockly.Msg.DISPLAY_IMAGE_LET2='A';
Blockly.Msg.DISPLAY_IMAGE_SHIFT='La traducción';
Blockly.Msg.DISPLAY_IMAGE_UNIT='Unidades';

Blockly.LANG_MATH_RANDOM_FLOAT_INPUT_FROM ='Aleatorio decimal de';
Blockly.LANG_MATH_RANDOM_FLOAT_INPUT_TO ='A';
Blockly.LANG_MATH_RANDOM_FLOAT_TOOLTIP2 ='Devuelve el número dos (con) aleatorio decimal entre';

Blockly.MICROBIT_SPEECH_pitch ='El tono';
Blockly.MICROBIT_SPEECH_speed ='La velocidad de';
Blockly.MICROBIT_SPEECH_mouth ='Los labios';
Blockly.MICROBIT_SPEECH_throat ='La garganta';
Blockly.MICROBIT_SPEECH_translation ='La traducción de voz';

Blockly.MICROBIT_ACTUATOR_bpm ='La velocidad de';
Blockly.MICROBIT_ACTUATOR_ticks ='Resolución';

Blockly.MICROBIT_PYTHON_TYPE = 'Los tipos de datos de acceso';
Blockly.MICROBIT_LOGIC_IS_IN = 'Ahí dentro?';
Blockly.Msg.CONTROLS_FOREACH_INPUT = "En cada";

Blockly.MICROBIT_DISPLAY_UNION = ' Las Naciones Unidas ';
Blockly.MICROBIT_DISPLAY_INTERSECTION = ' La intersección ';
Blockly.MICROBIT_DISPLAY_MINUS = ' La deducción ';
Blockly.MICROBIT_DISPLAY_MERGE_SHAPE = ' Forma de fusión ';
Blockly.Msg.DICTS_CREATE_EMPTY_TITLE = "Para el diccionario de vacío";
Blockly.Msg.DICTS_CREATE_EMPTY_TOOLTIP = "Devuelve un diccionario de vacío, de longitud 0, no contiene ningún registro de datos";
Blockly.Msg.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = "diccionario";
Blockly.Msg.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = "Añadir, eliminar o reorganizar las parte colocar bloques de este diccionario.";
Blockly.Msg.DICTS_CREATE_WITH_INPUT_WITH = "En el diccionario";
Blockly.Msg.DICTS_CREATE_WITH_ITEM_TITLE = "las entradas"
Blockly.Msg.DICTS_CREATE_WITH_ITEM_TOOLTIP = "Un elemento añadido al diccionario.";
Blockly.Msg.DICTS_CREATE_WITH_TOOLTIP = "La creación de un diccionario con cualquier número de proyectos.";
Blockly.Msg.DICTS_CREATE_WITH_ITEM_KEY= "key"
Blockly.Msg.DICT_KEYS = "Todas las claves de acceso";
Blockly.Msg.DICTS_KEYS_TOOLTIP = "Devuelve una lista de enlaces, incluye un diccionario todas las";
Blockly.Msg.DICTS_GET_FROM_DICTS = "A partir de un diccionario";
Blockly.Msg.DICTS_GET_IN = "En la obtención de la clave";
Blockly.Msg.DICTS_GET_VALUE = "el valor correspondiente";
Blockly.Msg.DICTS_GET_TOOLTIP = "Correspondiente al valor de una clave de acceso en el diccionario";
Blockly.Msg.DICTS_ADD_in_DICT = "En el diccionario";
Blockly.Msg.DICTS_ADD = "Añadir o modificar entradas ,la clave";
Blockly.Msg.DICTS_ADD_VALUE = "el valor correspondiente";
Blockly.Msg.DICTS_ADD_OR_CHANGE_TOOLTIP = "Añadir o eliminar una entrada en el diccionario";
Blockly.Msg.DICTS_DELETE_IN = "Eliminar entrada ,la clave";
Blockly.Msg.DICTS_DELETE_VALUE = "Y el correspondiente valor";
Blockly.Msg.DICTS_DELETE_TOOLTIP = "Eliminar una entrada en el diccionario";
Blockly.Msg.DICT_CLEAR = "Vaciar todas las entradas en el diccionario";
Blockly.Msg.DICT_ITEMS = "En la lista de diccionarios"; 
Blockly.Msg.DICTS_ITEMS_TOOLTIP = "Devuelve una lista incluye un diccionario puede atravesar todas las llaves y el correspondiente valor";
Blockly.Msg.DICT_VALUES = "Para obtener todos los valores de la clave correspondiente";
Blockly.Msg.DICTS_VALUES_TOOLTIP = "Devuelve una lista de valores correspondientes a todas las teclas, incluye un diccionario";
Blockly.Msg.DICTS_LENGTH_TOOLTIP = "Devuelve la longitud del diccionario, es decir, un número de clave";
Blockly.Msg.DICT_DELDICT = "Supresión de diccionario";
Blockly.Msg.MATH_BIN = 'binary';
Blockly.Msg.MATH_OCT = 'octal';
Blockly.Msg.MATH_DEC = 'decimal';
Blockly.Msg.MATH_HEX = 'hex';

Blockly.MIXLY_MICROBIT_TYPE_INT = 'Entero';
Blockly.MIXLY_MICROBIT_TYPE_FLOAT = 'float';
Blockly.MIXLY_MICROBIT_TYPE_STRING = "La cadena";
Blockly.MIXLY_MICROBIT_TYPE_LIST = "La lista de";
Blockly.MIXLY_MICROBIT_TYPE_TUPLE = "Adas";
Blockly.MIXLY_MICROBIT_TYPE_DICT = "Diccionario";
Blockly.MIXLY_MICROBIT_TYPE_SETS = "La colección";
Blockly.MIXLY_MICROBIT_TYPE_IMAGE = "La imagen";

Blockly.MIXLY_MICROBIT_PY_STORAGE_OPEN_FILE = "Abrir el archivo";
Blockly.MIXLY_MICROBIT_PY_STORAGE_MODE = "El modo de";
Blockly.MIXLY_MICROBIT_PY_STORAGE_READ = "Leer"
Blockly.MIXLY_MICROBIT_PY_STORAGE_WRITE = "Escribir"
Blockly.MIXLY_MICROBIT_PY_STORAGE_BIT_READ = "Lectura binaria";
Blockly.MIXLY_MICROBIT_PY_STORAGE_BIT_WRITE = "Escribir en binario";
Blockly.MIXLY_MICROBIT_PY_STORAGE_AS = "Para";
Blockly.MIXLY_MICROBIT_PY_STORAGE_MAKE = "A";
Blockly.MIXLY_MICROBIT_PY_STORAGE_FILE_WRITE = "escribir en el archivo";


Blockly.MIXLY_MICROBIT_PY_STORAGE_FROM_FILE = 'Desde el archivo';
Blockly.MIXLY_MICROBIT_PY_STORAGE_NO_MORE_THAN_SIZE = "Leer el contenido de no más de";
Blockly.MIXLY_MICROBIT_PY_STORAGE_ONE_LINE_NO_MORE_THAN_SIZE = "Leer el contenido de no más de una línea"
Blockly.MIXLY_MICROBIT_PY_STORAGE_CHARACTER = "Caracteres";
Blockly.MIXLY_MICROBIT_PY_STORAGE_FILE = "El archivo";
Blockly.MIXLY_MICROBIT_PY_STORAGE_CAN_WRITE_ORNOT = "Si se puede escribir";
Blockly.MIXLY_MICROBIT_PY_STORAGE_GET = "La adquisición de";
Blockly.MIXLY_MICROBIT_PY_STORAGE_FILENAME = "Nombre de archivo";
Blockly.MIXLY_MICROBIT_PY_STORAGE_CLOSE_FILE = "Cerrar el archivo";
Blockly.MIXLY_MICROBIT_PY_STORAGE_LIST_ALL_FILES = "Lista todos los archivos";
Blockly.MIXLY_MICROBIT_PY_STORAGE_DELETE_FILE = "Borrar archivos";
Blockly.MIXLY_MICROBIT_PY_STORAGE_GET_FILE_SIZE = "Obtención de Documentación";
Blockly.MIXLY_MICROBIT_PY_STORAGE_SIZE = "El tamaño de";

Blockly.MIXLY_MICROBIT_PY_CONTORL_GET_TYPE = "Los tipos de datos";
Blockly.MIXLY_MICROBIT_PY_CONTORL_UNAME = "El actual sistema de información";

Blockly.MIXLY_MICROBIT_SHOW_STRING = "Muestra una cadena literal %1 retraso %2 milisegundos %3 la espera %4 %5 el ciclo %6 %7 la eliminación de %8";
Blockly.MIXLY_MICROBIT_Scroll_string = "El despliegue de una cadena de caracteres %1 retraso %2 milisegundos %3 la espera %4 %5 el ciclo %6 %7 la eliminación de %8";

Blockly.MIXLY_COMMUNICATION_RFID_INITIAL = "Para inicializar el RFID";
Blockly.MIXLY_COMMUNICATION_RFID_ON_DETECTED = "Detecta la señal";
Blockly.MIXLY_COMMUNICATION_RFID_READ_CARDNUM = "El número de la tarjeta de lectura de tarjetas RFID";
Blockly.MIXLY_COMMUNICATION_RFID_READ_CARDNUM_IS = "El número de la tarjeta RFID para detectar";
Blockly.MIXLY_COMMUNICATION_RFID_WRITE = "Escribir la tarjeta RFID";
Blockly.MIXLY_COMMUNICATION_DATA_BLOCK = "Bloque de datos";
Blockly.MIXLY_COMMUNICATION_WRITE_NUM = "Para escribir los datos";
Blockly.MIXLY_MICROBIT_PY_COMMUNICATE_WIFI = "inalámbrico";
Blockly.MIXLY_MICROBIT_PY_COMMUNICATE_ON = "on";
Blockly.MIXLY_MICROBIT_PY_COMMUNICATE_OFF = "off";
Blockly.MIXLY_COMMUNICATION_RFID_TOOLTIP = "Esta es la lectura de tarjetas RFID";
Blockly.MIXLY_COMMUNICATION_RFID_READ = "Lectura de RFID";
Blockly.MIXLY_COMMUNICATION_DATA_FROM = "Los datos";
Blockly.MIXLY_COMMUNICATION_RFID_OFF = "RFID para la detección";
Blockly.MIXLY_MICROBIT_PY_COMMUNICATE_RESET = "restablecer";
// mixpy
Blockly.blockpy_inout_input = 'Recibir entrada';
Blockly.blockpy_inout_raw_input = 'Recibir entrada de cadena';
Blockly.blockpy_inout_print = 'Imprimir';
Blockly.Msg.INOUT_input_TOOLTIP = "Recibir entrada de teclado, fin de retorno de carro, se le indica al usuario'' prompt ";
Blockly.Msg.INOUT_raw_input_TOOLTIP = 'Recibir entrada de teclado en formato de cadena, final del retorno de carro, solicitud es solicitud de entrada para el usuario';
Blockly.blockpy_turtle_create = 'Crear Tortuga';
Blockly.blockpy_turtle_create_TOOLTIP = 'Crear una nueva tortuga';
Blockly.blockpy_forward = 'Adelante';
Blockly.blockpy_backward = 'Atrás';
Blockly.blockpy_turtle_move_num = 'pasos';
Blockly.blockpy_turtle_move = 'Mover';
Blockly.MIXLY_TOOLTIP_TURTEL_FORWARD = 'Command Turtle Moves Forward';
Blockly.MIXLY_TOOLTIP_TURTEL_BACKWARD = 'Comando tortuga para retroceder';
Blockly.blockpy_left = 'Izquierda';
Blockly.blockpy_right = 'right';
Blockly.blockpy_turtle_rotate_num = 'angle';
Blockly.blockpy_turtle_rotate = 'rotar';
Blockly.MIXLY_TOOLTIP_TURTEL_LEFT = 'Command Tortoise gira a la izquierda';
Blockly.MIXLY_TOOLTIP_TURTEL_RIGHT = 'Command Tortoise gira a la derecha';
Blockly.blockpy_setheading = 'Orientación';
Blockly.blockpy_setheading_degree = 'grado';
Blockly.blockpy_time_time = 'marca de tiempo de la hora actual';
Blockly.Msg.blockpy_SET_CREATE_WITH_TOOLTIP = "Crear una colección con cualquier cantidad de elementos.";
Blockly.Msg.blockpy_SET_CREATE_EMPTY_TITLE = "Inicializar para vaciar la colección";
Blockly.Msg.blockpy_SET_CREATE_WITH_INPUT_WITH = 'Colección inicial es';
Blockly.Msg.blockpy_SET_CREATE_WITH_CONTAINER_TITLE_ADD = "establecer";
Blockly.Msg.blockpy_SET_CREATE_WITH_CONTAINER_TOOLTIP = "Agregar, eliminar o reorganizar partes para reconfigurar este bloque de colección.";
Blockly.Msg.blockpy_SET_VARIABLES_NAME = "Elementos";
Blockly.Msg.blockpy_SET_CREATE_WITH_ITEM_TOOLTIP = "Agregar un elemento a la colección.";
Blockly.Msg.SET_LENGTH_TOOLTIP = "devolver el número de elementos en la colección.";
Blockly.Msg.SET_CLEAR = "Vaciar todos los elementos en la colección";
Blockly.Msg.LISTS_TO_SET = "convertir a colección";
Blockly.blockpy_USE_LIST = 'listará';
Blockly.Msg.LISTS_TO_SET_TOOLTIP = "Crear una colección de una lista";
Blockly.blockpy_set_union = 'consolidación';
Blockly.blockpy_set_intersection = 'Intersección';
Blockly.blockpy_set_difference = 'diferencia';
Blockly.blockpy_set = 'colección';
Blockly.blockpy_and_set = 'y colección';
Blockly.blockpy_set_get_operate = 'Fetch';
Blockly.MIXLY_TOOLTIP_SET_UNION = 'devolver la unión de dos colecciones';
Blockly.MIXLY_TOOLTIP_SET_INTERSECTION = 'Devuelve la intersección de dos conjuntos';
Blockly.MIXLY_TOOLTIP_SET_DIFFERENCE = 'devuelve la diferencia de dos conjuntos';
Blockly.MIXLY_blockpy_set_add = 'Agregar';
Blockly.Msg.SET_ADD_TOOLTIP = "Agregar un elemento a la colección. Si este elemento ya está en la colección, no tiene ningún efecto.";
Blockly.MIXLY_blockpy_set_discard = 'Eliminar';
Blockly.Msg.SET_DISCARD_TOOLTIP = "Eliminar un elemento de la colección. Si este elemento no está en la colección, no tiene ningún efecto.";
Blockly.blockpy_set_update = 'y actualizar';
Blockly.MIXLY_TOOLTIP_SET_UPDATE = 'tomar la unión de dos conjuntos y asignarla al conjunto anterior';
Blockly.MIXLY_TOOLTIP_SET_INTERSECTION_UPDATE = 'toma la intersección de dos conjuntos y asigna al conjunto anterior';
Blockly.MIXLY_TOOLTIP_SET_DIFFERENCE_UPDATE = 'toma la diferencia de dos conjuntos y asigna al conjunto anterior';
Blockly.blockpy_set_of = "'s";
Blockly.blockpy_is_set = 'es una colección';
Blockly.blockpy_set_sub = 'Subconjunto';
Blockly.blockpy_set_super = 'superconjunto';
Blockly.MIXLY_TOOLTIP_SET_SUB = 'para determinar si el conjunto anterior es un subconjunto del siguiente conjunto, devolver el valor booleano';
Blockly.MIXLY_TOOLTIP_SET_SUPER = 'para determinar si el conjunto anterior es un superconjunto del siguiente conjunto, return boolean';
Blockly.blockpy_turtle_clear = 'Borrar pantalla';
Blockly.blockpy_turtle_reset = 'Restablecer';
Blockly.blockpy_turtle_home = 'Volver al origen';
Blockly.blockpy_turtle_drawing = 'Trail';
Blockly.MIXLY_TOOLTIP_TURTEL_CLEAR = 'Limpiar todos los rastros de la tortuga, la posición y el estado de la tortuga sin cambios';
Blockly.MIXLY_TOOLTIP_TURTEL_RESET = 'Borrar todos los rastros de la tortuga, resetear el estado de Tortoise al estado inicial';
Blockly.MIXLY_TOOLTIP_TURTEL_HOME = 'La tortuga regresó al origen y se restauró a su estado original, la traza permanece sin cambios';
Blockly.blockpy_turtle_penup = 'Recoger';
Blockly.blockpy_turtle_pendown = 'drop pen';
Blockly.blockpy_turtle_blank = '';
Blockly.MIXLY_TOOLTIP_TURTEL_PENUP = 'Pon el bolígrafo, la tortuga no dejará huellas cuando se mueva';
Blockly.MIXLY_TOOLTIP_TURTEL_PENDOWN = 'pluma abajo, la tortuga dejará un rastro al moverse';
Blockly.blockpy_turtle_size = 'thickness';
Blockly.blockpy_turtle_speed = 'Velocidad';
Blockly.blockpy_turtle_set = 'Establecer pincel';
Blockly.blockpy_turtle_set_num = 'yes';
Blockly.MIXLY_TOOLTIP_TURTEL_SIZE = 'Establecer el espesor de los rastros de tortuga';
Blockly.MIXLY_TOOLTIP_TURTEL_SPEED = 'Establecer la velocidad de movimiento de la tortuga al pintar';
Blockly.blockpy_turtle_circle = 'Círculo';
Blockly.blockpy_turtle_dot = 'punto';
Blockly.blockpy_turtle_draw = 'Dibujar Gráfico';
Blockly.blockpy_turtle_radius = 'Radio';
Blockly.MIXLY_TOOLTIP_TURTEL_CIRCLE = 'Dibuja un círculo hueco';
Blockly.MIXLY_TOOLTIP_TURTEL_DOT = 'Dibujar un punto sólido';
Blockly.blockpy_turtle_show = 'Mostrar tortuga';
Blockly.blockpy_turtle_hide = 'Tortuga oculta';
Blockly.MIXLY_TOOLTIP_TURTEL_SHOW = 'Mostrar tortugas como flechas';
Blockly.MIXLY_TOOLTIP_TURTEL_HIDE = 'Flecha oculta que indica tortuga';
Blockly.blockpy_turtle_goto = 'Mover a la coordenada x';
Blockly.blockpy_turtle_goto_y = 'y';
Blockly.blockpy_turtle_goto_position = 'Ubicación';
Blockly.blockpy_turtle_setx = 'x';
Blockly.blockpy_turtle_sety = 'y';
Blockly.MIXLY_TOOLTIP_TURTEL_SETX = 'Tortuga se mueve horizontalmente a una posición de coordenadas dada';
Blockly.MIXLY_TOOLTIP_TURTEL_SETY = 'Tortuga se mueve verticalmente a una posición de coordenadas dada';
Blockly.blockpy_turtle_setxy = 'Configuraciones';
Blockly.blockpy_turtle_setxy_num = 'Coordenadas';
Blockly.blockpy_turtle_bgcolor = 'Establecer color de fondo';
Blockly.blockpy_turtle_pencolor = 'Establecer el color del pincel';
Blockly.blockpy_turtle_fillcolor = 'Establecer el color de relleno del pincel';
Blockly.Msg.TUPLE_CREATE_WITH_TOOLTIP = "Crear una tupla con cualquier cantidad de elementos.";
Blockly.Msg.TUPLE_CREATE_EMPTY_TITLE = "Inicializar para vaciar la tupla";
Blockly.Msg.TUPLE_CREATE_WITH_INPUT_WITH = "tupla inicial";
Blockly.Msg.TUPLE_CREATE_WITH_CONTAINER_TITLE_ADD = "Tuple";
Blockly.Msg.TUPLE_CREATE_WITH_CONTAINER_TOOLTIP = "Agregar, eliminar o reorganizar partes para reconfigurar este tuple block.";
Blockly.Msg.TUPLE_CREATE_WITH_ITEM_TOOLTIP = "Agregar un elemento a un elemento.";
Blockly.TUPLE_GET_INDEX_TOOLTIP = 'Devuelve el valor de la posición especificada en la tupla.';
Blockly.Msg.TUPLE_LENGTH_TOOLTIP = "devolver la longitud de la tupla.";
Blockly.Msg.TUPLE_DEL = "Eliminar tupla";
Blockly.Msg.TUPLE_JOIN = "Conectar";
Blockly.Msg.TUPLE_JOIN_TOOLTIP = "Conectar dos tuplas para formar una nueva tupla.";
Blockly.Msg.LISTS_TO_TUPLE = "Convertir a tupla";
Blockly.Msg.LISTS_TO_TUPLE_TOOLTIP = "Crear tuplas de la lista";
Blockly.blockpy_TUPLE_MAX = 'Máximo';
Blockly.blockpy_TUPLE_MIN = 'Mínimo';
Blockly.MIXLY_TOOLTIP_TUPLE_MAX = 'devolver el valor máximo de los elementos en la tupla';
Blockly.MIXLY_TOOLTIP_TUPLE_MIN = 'devuelve el valor mínimo de un elemento en una tupla';
Blockly.blockpy_TUPLE_GET = 'Fetch';
Blockly.blockpy_turtle_set_size = 'Establecer grosor del pincel';
Blockly.blockpy_turtle_set_speed = 'Set the brush speed';
Blockly.blockpy_inout_print_inline='print';
Blockly.Msg.TEXT_PRINT_INLINE_TOOLTIP = "print text or number。";
Blockly.MICROPYTHON_TOOLTIP_LISTS_CREATE_WITH_TEXT = "create list from string。";
Blockly.MIXPY_TOOLTIP_TUPLE_CREATE_WITH_TEXT = "create tuple from string。";
Blockly.blockpy_MIXLY_TUPLE_CREATE='create tuple';
Blockly.Msg.TURTLE_CLONE = "clone turtle";
Blockly.Msg.TURTLE_CLONE_TOOLTIP = "clone a turtle。";
Blockly.blockpy_turtle_angle = 'angle';
Blockly.blockpy_turtle_beginfill='begin fill';
Blockly.blockpy_turtle_endfill='end fill';
Blockly.MIXLY_TOOLTIP_TURTEL_BEGINFILL = 'turtle begin fill';
Blockly.MIXLY_TOOLTIP_TURTEL_ENDFILL = 'turtle end fill';
Blockly.blockpy_USE_TUPLE='change tuple';
Blockly.Msg.TUPLE_TO_LISTS = "into list";
Blockly.Msg.LISTS_TO_TUPLE_TOOLTIP = "change tuple into list";
Blockly.Msg.BLOCKPY_PRINT_TOOLTIP= "print text or number with return。";
Blockly.MIXLY_TOOLTIP_TUPLE_MAX = 'return the maximum value of the elements in the tuple';
Blockly.MIXLY_TOOLTIP_TUPLE_MIN = 'return the minimum value of an element in a tuple';
Blockly.MIXLY_DE= "'s";
Blockly.MIXLY_UPDATE='update';
Blockly.Msg.MIXLY_LIST_LEN='length';
Blockly.Msg.MIXLY_LIST_COUNT='count';
Blockly.Msg.MIXLY_LIST_INDEX='index';
Blockly.Msg.A_TO_B='into';

Blockly.MIXLY_MICROBIT_TYPE_NONE = "NONE";
Blockly.MIXLY_MICROBIT_WAIT = 'wait';
Blockly.MIXLY_MICROBIT_RANDOM = 'random';

Blockly.Msg.TUPLE_TO_SET = "Convert tuples to collections";
Blockly.Msg.TUPLE_TO_LISTS = "Convert tuples to a list";
Blockly.Msg.SET_TO_TUPLE = "Convert the collection to a tuple";
Blockly.Msg.SET_TO_LISTS = "Convert collections to lists";
Blockly.Msg.MATH_BA ="put";
Blockly.Msg.MATH_JinZhi= "Dead";
Blockly.Msg.MATH_ZHW = "Convert to";
Blockly.Msg.MATH_Before_two="binary number converted to";
Blockly.Msg.MATH_Before_eight="converted to octal number";
Blockly.Msg.MATH_Before_ten="decimal number converted to";
Blockly.Msg.MATH_Before_sixteen="Convert hexadecimal number to";
Blockly.Msg.MATH_Behind_two="binary number";
Blockly.Msg.MATH_Behind_eight="octal number";
Blockly.Msg.MATH_Behind_ten="decimal number";
Blockly.Msg.MATH_Behind_sixteen="hexadecimal number";
Blockly.MIXLY_TOOLTIP_sensor_pin_pressed="Return pin is touched";
Blockly.MIXLY_TOOLTIP_INOUT_ANALOG_WRITE_SET="Set Pin Period";
Blockly.MICROBIT_controls_TypeLists="return data type";
Blockly.Msg_IN="If the element (x) returns true in the sequence";
Blockly.Msg.MATH_TWO='two';
Blockly.Msg.MATH_TEN='Ten';
Blockly.Msg.MATH_EIGHT='eight';
Blockly.Msg.MATH_SIXTEEN='16';
Blockly.Msg.TEXT_GET_INDEX_RANDOM="random";
Blockly.Msg._GET_TEXT_SUBLIST_TOOLTIP = "Copy the specified part of the string.";
Blockly.MIXLY_TOOLTIP_TEXT_LENGTH="Get string length";
Blockly.MIXLY_SENOR_IS_PRESSED="The button is pressed to return true";
Blockly.MIXLY_SENOR_WAS_PRESSED="Button is pressed back to true";
Blockly.MIXLY_MICROBIT_JS_CURRENT="When";
Blockly.MIXLY_MICROBIT_JS_STATE="Status is";
Blockly.MIXLY_MICROBIT_PERFORMANCE="Execute some statements";
Blockly.MIXLY_MICROBIT_JS_IS_COMPASS_CALIBRATED1="Return true if the compass has been corrected";
Blockly.MIXLY_MICROBIT_JS_SET_TEMPO1="Set the resolution and speed of the rhythm";
Blockly.MIXLY_MICROBIT_PY_ACTUATOR_SPEECH="By the specified music attribute";
Blockly.MIXLY_MICROBIT_Play_notes1="Playing a note list";
Blockly.MIXLY_MICROBIT_Play_built_in_melody1="Play built-in music";
Blockly.MIXLY_MICROBIT_Copy_image1="Copy Image";
Blockly.Msg.DISPLAY_IMAGE_LET3="Pan specified units";
Blockly.MIXLY_MICROBIT_image_add="Merge two images";
Blockly.MIXLY_MICROBIT_image_reduce="Remove image 2 from image 1";
Blockly.MIXLY_MICROBIT_Create_image1="Create Image";
Blockly.MIXLY_MICROBIT_Invert_image1="Reverse Display Image";
Blockly.MIXLY_MICROBIT_Display_is_on1="return true if the display is already open";
Blockly.MIXLY_MICROBIT_JS_MONITOR_SHOW_delay="at specified intervals";
Blockly.MIXLY_MICROBIT_Animate_images1 = "Animated Display Image";
Blockly.MIXLY_MICROBIT_JS_MONITOR_BRIGHTNESS1 = "Get the brightness of the point (x, y)";
Blockly.MIXLY_MICROBIT_JS_MONITOR_BRIGHTNESS2 = "Set the brightness of the point (x, y)";
Blockly.MIXLY_MICROBIT_Built_in_image1 = "Built-in picture";
Blockly.MIXLY_RGB_PIN_COUNT = "Set RGB string, number of lights";
Blockly.MIXLY_RGB_NUM_R_G_B = "Set RGB light, R value, B value, G value";
Blockly.MIXLY_MICROBIT_JS_SERIAL_READ_LINE1 = "Return a string of strings in the serial port";
Blockly.MIXLY_SERIAL_AVAILABLE1 = "If the data in the serial port is readable, return true";
Blockly.MIXLY_SERIAL_softserial = "Initialize serial input, output, baud rate";
Blockly.MIXLY_MICROBIT_Configure_radio1 = 'Configure wireless information length, maximum number of queues, channel, broadcast power, data rate';
Blockly.MIXLY_MICROBIT_Send_message1 = "Wireless Send String";
Blockly.MIXLY_MICROBIT_JS_I2C_READ = "Set the address of i2c to read the number, the number of bytes";
Blockly.MIXLY_MICROBIT_JS_I2C_WRITE = "Set the address of the i2c write number, value";
Blockly.Msg.TEXT_PRINT_Huanhang_TOOLTIP = "Automatic Wrap";
Blockly.MIXLY_MICROBIT_Shiliang_Direction="x,y,z vector and direction";
Blockly.MIXLY_MICROBIT_Direction="direction";
Blockly.MIXLY_MICROBIT_JS_ACCELERATION1="Acceleration (mg)";
Blockly.MIXLY_MIX1="Year/Month/Day";
Blockly.MIXLY_MIX2="hours/minutes/seconds";
Blockly.MIXLY_LCD_PRINT3="On the xth line of the LCD, the y column prints the string";
Blockly.MIXLY_LCD_PRINT4="Print the string on the first and second lines of the LCD";
Blockly.MIXLY_USE="to";
Blockly.MIXLY_BELONG=""
Blockly.MIXLY_MICROBIT_PY_STORAGE_CAN_WRITE_ORNOT1="If the file is writable, it returns true, otherwise it returns false";
Blockly.MIXLY_MICROBIT_PY_STORAGE_GET_FILENAME="Get file name";
Blockly.MIXLY_MICROBIT_IMAGE_HEIGHT="height";
Blockly.MIXLY_MICROBIT_IMAGE_WIDTH="Width";
Blockly.MIXLY_MICROBIT_IMAGE="image";
Blockly.MIXLY_MICROBIT_Reset_COMPASS="Restore Compass Initial Settings";
Blockly.blockpy_turtle_pencolor_hex='Set the brush color to hex #';
Blockly.blockpy_turtle_fillcolor_hex='Set the brush fill color to hex #';
Blockly.blockpy_SET_GET_AND_REMOVE_LAST='Get and delete the smallest item in the collection';
Blockly.MIXLY_blockpy_set_update='Split increase';
Blockly.Msg.SET_TO_LISTS_TOOLTIP = "Convert the collection to a list";
Blockly.blockpy_set_add_update='Split increase list/string';
Blockly.blockpy_USE_SET = 'will set';
Blockly.Msg.SET_TO_LIST = "Convert to list";
Blockly.Msg.DICTS_ADD_OR_CHANGE = "Add or Modify to";
Blockly.MIXLY_TOOLTIP_LISTS_CREATE_WITH_TEXT2='Create or modify a list with a string. ';
Blockly.Msg.PYTHON_LISTS_GET_SUBLIST_TOOLTIP = "Copy the part specified in the list.";
Blockly.Msg.SET_UPDATE_TOOLTIP = "Split and add the contents of the list or string to the collection.";
Blockly.Msg.SET_POP_TOOLTIP = "Get and delete an item from the collection.";
Blockly.Msg.DICT_LENGTH_TOOLTIP = "Returns the number of keys in the dictionary.";
Blockly.Msg.DICTS_CLEAR_TOOLTIP = "Convert the dictionary to an empty dictionary, retain the variables.";
Blockly.Msg.DICTS_DEL_TOOLTIP = "Please empty the dictionary and delete the variable corresponding to the dictionary.";
Blockly.Msg.LISTS_INDEX_FROM_START_TOOLTIP = "%1 is the first item";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM = "Returns the item at the specified location in the list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Return a random item in the list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM = "Get and remove items from the specified location in the list.";
Blockly.MIXLY_PIN="Pin";
Blockly.MIXLY_Digital_PINMODEIN="Digital Input";
Blockly.MIXLY_Digital_PINMODEOUT="Digital Output";
Blockly.MIXLY_Analog_PINMODEIN="Analog Input";
Blockly.MIXLY_Analog_PINMODEOUT="Analog Output";
Blockly.MIXLY_Second="second";
Blockly.MIXLY_mSecond="ms";
Blockly.MIXLY_uSecond="microseconds";
Blockly.MIXLY_TOOLTIP_INOUT_ANALOG_WRITE_SET_FREQ="Set pin analog output frequency";
Blockly.MIXLY_TOOLTIP_CHAOSHENGBO='ultrasonic ranging (cm): trigger connector pin 15, echo connector pin 14, sclk connector pin 13';
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Get and remove random items from the list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_INSERT = "Insert the item at the specified position in the list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_CHANGE = "Modify the item at the specified location in the list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_DELETE = "Remove items from the specified location in the list.";
Blockly.blockpy_turtle_shape = 'The shape is set to';
Blockly.blockpy_turtle_shape_arrow = 'arrow';
Blockly.blockpy_turtle_shape_turtle = 'Turtle';
Blockly.blockpy_turtle_shape_square = 'square';
Blockly.blockpy_turtle_shape_triangle = 'Triangle';
Blockly.blockpy_turtle_shape_circle = 'circle';
Blockly.blockpy_turtle_shape_classic = 'default';
Blockly.blockpy_turtle_write='Write';
Blockly.Msg.TURTLE_SHAPE_TOOLTIP = "Set the shape of the turtle, optional shapes include circles, triangles, squares, turtles, arrows and defaults.";
Blockly.Msg.TURTLE_WRITE_TOOLTIP = "Make the turtle write the specified text at the current position on the canvas.";
Blockly.Msg.LISTS_EXTEND_TOOLTIP = "Add the next list to the end of the previous list.";
Blockly.MIXLY_MICROBIT_LIST_A_VALUE='a value';
Blockly.Msg.TURTLE_POS = "Get the current position of the turtle";
Blockly.MIXLY_TOOLTIP_TURTEL_POS="Get the turtle's current position and return a tuple containing the current position x and y coordinates";
Blockly.Msg.LISTS_CREATE_PYTHON_EMPTY_TITLE = "Initialize to an empty list";
Blockly.Msg.LISTS_CREATE_PYTHON_EMPTY_TOOLTIP = "Return a list with a length of 0 and no data records";
Blockly.Msg.LISTS_CREATE_WITH_PYTHON_TOOLTIP = "Create a list with any number of items.";
Blockly.MIXLY_TOOLTIP_CONVERT_LIST_TO_TUPLE='Convert the list to a tuple. ';
Blockly.MIXLY_TOOLTIP_CONVERT_LIST_TO_SET='Convert the list into a collection. ';
Blockly.LANG_LISTS_REVERSE_TOOLTIP = 'Reverse the order of all items in the list. ';
Blockly.Msg.LISTS_SORT_TOOLTIP = 'Sort all the items in the list in the specified order. ';
Blockly.MIXLY_TOOLTIP_LIST_FIND_INDEX='Returns the position of the specified value in the list, and returns the position of the first value if there are multiple values. ';
Blockly.MIXLY_TOOLTIP_LIST_FIND_COUNT='Returns the number of specified values ​​in the list. ';
Blockly.MIXLY_TOOLTIP_LIST_APPEND='Add the specified value to the end of the list. ';
Blockly.MIXLY_TOOLTIP_LIST_REMOVE='Remove the specified value from the list, delete the first one if there are multiple values ​​in the list, and report an error if the value is not in the list. ';
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT = "Add the specified value to the specified position in the list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_CHANGE = "Modify the value of the specified location in the list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_DELETE = "Remove the value of the specified location in the list.";
Blockly.Msg.DICT_UPDATE = "The corresponding item in the item is added to the dictionary";
Blockly.Msg.MAKE_DICT = "The dictionary";
Blockly.Msg.DICTS_UPDATE_TOOLTIP = "Add all entries in the previous dictionary to the next dictionary, the former remains unchanged.";
Blockly.Msg.DICTS_ADD_TOOLTIP = "Add or modify an entry in the dictionary.";
Blockly.Msg.DICTS_DELETE_TOOLTIP = "Remove entries in the dictionary.";
Blockly.MIXLY_TOOLTIP_TUPLE_FIND_INDEX='Returns the position of the specified value in the tuple, and returns the position of the first value if there are multiple values. ';
Blockly.MIXLY_TOOLTIP_TUPLE_FIND_COUNT='Returns the number of specified values ​​in the tuple. ';
Blockly.Msg.MATH_ONLIST_TOOLTIP_TUPLE_AVERAGE = "Return the average of the values ​​in the tuple.";
Blockly.MIXLY_UART_SETUP="Initialize UART to";
Blockly.MIXLY_TOOLTIP_BLOCKGROUP_GET_TEM_HUM="Return the temperature and humidity measured by the temperature and humidity sensor.";
Blockly.MIXLY_DHT11_T_H="Get temperature and humidity";
Blockly.MIXLY_RECT="Draw a rectangle";
Blockly.MIXLY_RECT_START="starting point";
Blockly.MIXLY_RECT_Fill="fill";
Blockly.MIXLY_MICROBIT_SHOW_RECT = "Start point (x %1 , y %2 ) Width %3 Height %4 %5 Fill %6";
Blockly.MIXLY_MICROBIT_SHOW_LINE = "Line starting point (x %1 , y %2 ) length %3 ";
Blockly.MIXLY_DISPLAY_DRAW="draw";
Blockly.MIXLY_DISPLAY_RLINE="level";
Blockly.MIXLY_DISPLAY_VLINE="vertical";
Blockly.MIXLY_MICROBIT_SHOW_LINE_ARBITRARILY="Draw a line starting point (x1 %1 , y1 %2 ) End point (x2 %3 , y2 %4 ) ";
Blockly.MIXLY_ESP32_Create_image='Create image %1 %2 %3 %4 %5 %6 %7 %8 %9 %10 %11 %12 %13 %14 %15 %16 %17 %18 %19 %20 %21 % 22 %23 %24 %25 %26 %27 %28 %29 %30 %31 %32 %33 %34 %35 %36 %37 %38 %39 %40 %41 %42 %43 %44 %45 %46 % 47 %48 %49 %50 %51 %52 %53 %54 %55 %56 %57 %58 %59 %60 %61 %62 %63 %64 %65 %66 %67 %68 %69 %70 %71 % 72 % 73 % 74 % 75% 76 % 77 % 78 % 79 % 80 % 81 % 82 % 83 % 84 % 8 % 86 % 87 % 88 % 89 % 90 % 91 % 92 % 93 % 94 % 95 % 96 % 97%98 %99 %100 %101 %102 %103 %104 %105 %106 %107 %108 %109 %110 %111 %112 %113 %114 %115 %116 %117 %118 %119 %120 %121 % 122 %123 %124 %125 %126 %127 %128 %129 %130 %131 %132 %133 %134 %135 %136';
Blockly.MIXLY_ESP32_JS_MONITOR_BRIGHTNESS="If the point (x,y) lights up, it returns true";
Blockly.MIXLY_ESP32_JS_MONITOR_GET_POINT="The light is on?";
Blockly.MIXLY_ESP32_JS_MONITOR_SET_BRIGHTNESS="Setting off";
Blockly.MIXLY_ESP32_ON="Bright";
Blockly.MIXLY_ESP32_OFF="Off";
Blockly.MIXLY_ESP32_JS_MONITOR_SET_SCREEN_BRIGHTNESS="Set Screen Brightness";
Blockly.MIXLY_ESP32_JS_MONITOR_GET_SCREEN_BRIGHTNESS="Get screen brightness";
Blockly.MIXLY_ESP32_JS_MONITOR_SET_BLINK_RATE="Set the blinking frequency";
Blockly.MIXLY_NETWORK_MODE="Set wifi mode to";
Blockly.MIXLY_NETWORK_WIFI_OPEN="Activate";
Blockly.MIXLY_NETWORK_WIFI_CLOSE="Deactivate";
Blockly.MIXLY_NETWORK_WIFI_FLAG="Network Interface";
Blockly.MIXLY_NETWORK_WIFI_SCAN="Scan for available wifi";
Blockly.MIXLY_ESP32_NETWORK_CONNECT="Connect wifi";
Blockly.MIXLY_ESP32_NETWORK_ID="name";
Blockly.MIXLY_ESP32_NETWORK_PASSWORD="Password";
Blockly.MIXLY_NETWORK_WIFI_CONNECT="Connect to wifi?";
Blockly.MIXLY_ESP32_NETWORK_GET_CONNECT="Get wifi";
Blockly.MIXLY_ESP32_NETWORK_IP="IP address";
Blockly.MIXLY_ESP32_NETWORK_MASK="subnet mask";
Blockly.MIXLY_ESP32_NETWORK_GATEWAY="Gateway";
Blockly.MIXLY_ESP32_NETWORK_STOP_CONNECT="Disconnect wifi";
Blockly.MIXLY_ESP32_NETWORK_GET_WIFI="Get wifi";
Blockly.MIXLY_NETWORK_WIFI_ESSID="Access Point Name";
Blockly.MIXLY_NETWORK_WIFI_CHANNEL="wifi channel";
Blockly.MIXLY_NETWORK_WIFI_SCAN_ATTRIBUTE="All Features";
Blockly.MIXLY_ESP32_READ_LINE="Read a row";
Blockly.MIXLY_PINMODEPULLDOWN="pull down input";
Blockly.MIXLY_ESP32_BLUETOOTH_SETUP="Initialize Set Bluetooth";
Blockly.MIXLY_ESP32_BLUETOOTH_ADV_MAN="manufacturer name";
Blockly.MIXLY_ESP32_BLUETOOTH_ADV_DEV="Device Name";
Blockly.MIXLY_ESP32_BLUETOOTH_FLAG="broadcast";
Blockly.MIXLY_ESP32_BLUETOOTH_START="Enable";
Blockly.MIXLY_ESP32_BLUETOOTH="Bluetooth";
Blockly.MIXLY_ESP32_BDA="Connect to the remote GATTS server";
Blockly.MIXLY_ESP32_BLUETOOTH_SERVICES="Get existing GATTS service";
Blockly.MIXLY_ESP32_BLUETOOTH_CONNS="Get all current client connections";
Blockly.MIXLY_ESP32_BLUETOOTH_SCANNING="Scan is active?";
Blockly.MIXLY_ESP32_BLUETOOTH_SCAN="Scan";
Blockly.MIXLY_ESP32_SERVICE_SETUP="Create GATTSService";
Blockly.MIXLY_MICROBIT_JS_OLED='OLED';
Blockly.MIXLY_ESP32_CONNECT_ONENET="OneNET Connection";
Blockly.MIXLY_ESP32_ONENET_CLIENT="Device ID";
Blockly.MIXLY_ESP32_ONENET_SERVER="Server Domain Name";
Blockly.MIXLY_ESP32_ONENET_USERNAME="Product ID";
Blockly.MIXLY_ESP32_ONENET_PASSWORD="Product APIKey";
Blockly.MIXLY_ESP32_ONENET_TOPIC="Theme";
Blockly.MIXLY_ESP32_ONENET_SUB="callback function";
Blockly.MIXLY_ESP32_IOT_CONNECT_WIFI="Connect WIFI";
Blockly.MIXLY_ESP32_ONENET_USERNAME="Product ID";
Blockly.MIXLY_ESP32_ONENET_PASSWORD="Product APIKey";
Blockly.MIXLY_ESP32_DISCONNECT_ONENET="OneNET disconnected";
Blockly.MIXLY_ESP32_CHECK_ONENET="Receive and execute OneNET commands";
Blockly.MIXLY_ESP32_PUBLISH_ONENET="Send information to OneNET";
Blockly.MIXLY_ESP32_PUBLISH_ONENET_EMPTY="Send empty information to OneNET";
Blockly.MIXLY_TO_BITES='transfer byte';
Blockly.Msg.MATH_ONLIST_TOOLTIP_TUPLE_MAX = "Return the maximum number in the tuple.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_TUPLE_MEDIAN = "Return the median in the tuple.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_TUPLE_MIN = "Return the minimum number in the tuple.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_TUPLE_MODE = "Return the list of the most common items in the tuple.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_TUPLE_RANDOM = "Return a random element from the tuple.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_TUPLE_STD_DEV = "Return the standard deviation of the tuple.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_TUPLE_SUM = "Returns the sum of all the numbers in the tuple.";
Blockly.Msg.TUPLE_DEL_TOOLTIP = "Delete the tuple variable and release the storage space for the tuple variable.";
Blockly.Msg.PYTHON_TUPLE_GET_SUBLIST_TOOLTIP = "Copy the specified part of the tuple.";
Blockly.MIXLY_ESP32_NETWORK_SERVER="Set ESP32 to receive messages for the server";